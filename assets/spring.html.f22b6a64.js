import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as p,a as n,b as s,e as t,f as c,r as i}from"./app.69a69974.js";const l={},u=n("h1",{id:"实战项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#实战项目","aria-hidden":"true"},"#"),s(" 实战项目")],-1),r={href:"https://pan.baidu.com/s/1LxIxcHDO7SYB96SE-GZfuQ",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/weixin_46906696/article/details/125040457",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/giveupgivedown/article/details/128708122?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22128708122%22%2C%22source%22%3A%22giveupgivedown%22%7D",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"swagger-瑞吉外卖",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#swagger-瑞吉外卖","aria-hidden":"true"},"#"),s(" swagger（瑞吉外卖）")],-1),m={href:"https://blog.csdn.net/qq_43718048/article/details/121331567",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.csdn.net/weixin_45070175/article/details/122252918",target:"_blank",rel:"noopener noreferrer"},g=c(`<p>使用方式 操作步骤： 1、导入knife4j的maven坐标</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
			&lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;
			&lt;artifactId&gt;knife4j-spring-boot-starter&lt;/artifactId&gt;
			&lt;version&gt;3.0.2&lt;/version&gt;
		&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、导入knife4j相关配置类</p><p>webMvcConfig （加两个注解 @EnableSwagger2 @EnableKnife4j）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableSwagger2</span>
<span class="token annotation punctuation">@EnableKnife4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurationSupport</span> <span class="token punctuation">{</span>

	<span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">registry</span>:
     * <span class="token keyword">@return</span> void
     * <span class="token keyword">@author</span> 张帆
     * <span class="token keyword">@description</span> 设置资源映射
     * <span class="token keyword">@date</span> 2023/6/3 17:11
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;资源映射&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;doc.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:/META-INF/resources/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/webjars/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:/META-INF/resources/webjars/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/backend/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:/backend/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/front/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:/front/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">createRestApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 文档类型</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">SWAGGER_2</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">&quot;com.example.reggie.demo.controller&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;瑞吉外卖&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;瑞吉外卖接口文档&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、设置静态资源，否则接口文档页面无法访问</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> registry.addResourceHandler(&quot;doc.html&quot;).addResourceLocations(&quot;classpath:/META-INF/resources/&quot;);
registry.addResourceHandler(&quot;/webjars/**&quot;).addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>4、在LoginCheckFilter中设置不需要处理的请求路径</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> //定义不需要处理的请求路径
        String[] urls = new String[]{
                &quot;/employee/login&quot;,
                &quot;/employee/logout&quot;,
                &quot;/backend/**&quot;,
                &quot;/front/**&quot;,
                &quot;/common/**&quot;,
                // 移动端地址
                &quot;/user/sendMsg/**&quot;,
                &quot;/user/login&quot;,
              // swagger
                &quot;/doc.html&quot;,
                &quot;/webjars/**&quot;,
                &quot;/swagger/resources&quot;,
                &quot;v2/api-docs&quot;
        };
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用注解 注解说明 @Api 用在请求的类上，例如Controller.,表示对类的说明 @ApiModel 用在类上，通常是实体类，表示一个返回响应数据的信息 @ApiModelProperty 用在属性上，描述响应类的属性 @ApiOperation 用在请求的方法上，说明方法的用途、作用 @ApilmplicitParams 用在请求的方法上，表示一组参数说明 @ApilmplicitParam 用在@ApilmplicitParams注解中，指定一个请求参数的各个方面</p>`,10);function f(q,h){const a=i("ExternalLinkIcon");return o(),p("div",null,[u,n("p",null,[s("下载地址："),n("a",r,[s("https://pan.baidu.com/s/1LxIxcHDO7SYB96SE-GZfuQ"),t(a)]),s(" 提取码：dor4")]),n("p",null,[s("瑞吉外卖参考博客： "),n("a",d,[s(" 瑞吉外卖笔记_风吟Pro的博客-CSDN博客"),t(a)])]),n("p",null,[s("​ "),n("a",k,[s("瑞吉外卖项目详细分析笔记及所有功能补充代码_随身携带的笑的博客-CSDN博客"),t(a)])]),v,n("p",null,[n("a",m,[s("(参考文章) knife4j：快速入门_@enableknife4j_林雨涵的博客-CSDN博客"),t(a)])]),n("p",null,[n("a",b,[s("(229条消息) swagger文档增强工具knife4j使用详解_baobao555#的博客-CSDN博客"),t(a)])]),g])}const y=e(l,[["render",f],["__file","spring.html.vue"]]);export{y as default};
