const e=JSON.parse('{"key":"v-696d9fb1","path":"/posts/apple/2.html","title":"css","lang":"en-US","frontmatter":{"icon":"edit","date":"2022-01-02T00:00:00.000Z","category":["css"],"tag":["red"],"star":true,"description":"# css # 文字溢出省略号: 文字单行溢出: overflow: hidden; // 溢出隐藏 text-overflow: ellipsis; // 溢出用省略号显示 white-space: nowrap; // 规定段落中的文本不进行换行 多行文字溢出: overflow: hidden; // 溢出隐藏 text-overflow: ellipsis; // 溢出用省略号显示 display:-webkit-box; // 作为弹性伸缩盒子模型显示。 -webkit-box-orient:vertical; // 设置伸缩盒子的子元素排列方式：从上到下垂直排列 -webkit-line-clamp:3; // 显示的行数 # css变量： CSS变量又称CSS自定义属性，通过在css中自定义属性--var与函数var()组成，var()用于引用自定义属性。谈到为何会在CSS中使用变量，以下使用一个示例讲述。 :root { --c-color: orange; } .title { background-color: var(--c-color); } # 渐变： 渐变分为线性渐变、径向渐变，这里笔者直接记录的使用方式，也是为了使用的时候更加的直观，这里说下，在使用线性渐变的时候，使用角度以及百分比去控制渐变，会更加的灵活 使用方式: //渐变(方向) background: linear-gradient(to right, rgba(255, 255, 255, 0),#3FB6F7,rgba(255,255,255,0)); //渐变(角度) background: linear-gradient(88deg, #4DF7BF 0%, rgba(77, 247, 191, 0.26) 12%, rgba(77, 247, 191, 0) 100%); 边框渐变: border有个border-image的属性，类似background也有个background-image一样,通过为其设置渐变颜色后，实现的渐变，后面的数字4为x方向偏移量 使用方式: .border-grident{ margin-top: 20px; width: 200px; height: 200px; border: 4px solid; border-image: linear-gradient(to right, #8f41e9, #578aef) 4; } # background-size：cover和contain以及100% contain:图片放大至满足背景区域的最小边即止，当背景区域与背景图片的宽高比不一致的情况下，背景区域可能会长边下有空白覆盖不全。cover:图片放大至能满足最大变时为止，当背景区域与背景图片的宽高比不一致时，背景图片会在短边下有裁切，显示不全。 百分比:可以设置两个值 第一个设置宽度，第二个设置高度 如果只设置了一个值，那么第二个值默认会被设置为auto # elementui样式修改的几种方式: vue项目中，在修改elementui的样式时通常使用样式穿透，style使用css的预处理器(less, sass, scss)等，主要的样式穿透如下 // 第一种/deep/ /deep/ .test { *** } // 第二种::v-deep ::v-deep .test{ *** }","head":[["meta",{"property":"og:url","content":"https://github.com/Fankozhang/blog/posts/apple/2.html"}],["meta",{"property":"og:title","content":"css"}],["meta",{"property":"og:description","content":"# css # 文字溢出省略号: 文字单行溢出: overflow: hidden; // 溢出隐藏 text-overflow: ellipsis; // 溢出用省略号显示 white-space: nowrap; // 规定段落中的文本不进行换行 多行文字溢出: overflow: hidden; // 溢出隐藏 text-overflow: ellipsis; // 溢出用省略号显示 display:-webkit-box; // 作为弹性伸缩盒子模型显示。 -webkit-box-orient:vertical; // 设置伸缩盒子的子元素排列方式：从上到下垂直排列 -webkit-line-clamp:3; // 显示的行数 # css变量： CSS变量又称CSS自定义属性，通过在css中自定义属性--var与函数var()组成，var()用于引用自定义属性。谈到为何会在CSS中使用变量，以下使用一个示例讲述。 :root { --c-color: orange; } .title { background-color: var(--c-color); } # 渐变： 渐变分为线性渐变、径向渐变，这里笔者直接记录的使用方式，也是为了使用的时候更加的直观，这里说下，在使用线性渐变的时候，使用角度以及百分比去控制渐变，会更加的灵活 使用方式: //渐变(方向) background: linear-gradient(to right, rgba(255, 255, 255, 0),#3FB6F7,rgba(255,255,255,0)); //渐变(角度) background: linear-gradient(88deg, #4DF7BF 0%, rgba(77, 247, 191, 0.26) 12%, rgba(77, 247, 191, 0) 100%); 边框渐变: border有个border-image的属性，类似background也有个background-image一样,通过为其设置渐变颜色后，实现的渐变，后面的数字4为x方向偏移量 使用方式: .border-grident{ margin-top: 20px; width: 200px; height: 200px; border: 4px solid; border-image: linear-gradient(to right, #8f41e9, #578aef) 4; } # background-size：cover和contain以及100% contain:图片放大至满足背景区域的最小边即止，当背景区域与背景图片的宽高比不一致的情况下，背景区域可能会长边下有空白覆盖不全。cover:图片放大至能满足最大变时为止，当背景区域与背景图片的宽高比不一致时，背景图片会在短边下有裁切，显示不全。 百分比:可以设置两个值 第一个设置宽度，第二个设置高度 如果只设置了一个值，那么第二个值默认会被设置为auto # elementui样式修改的几种方式: vue项目中，在修改elementui的样式时通常使用样式穿透，style使用css的预处理器(less, sass, scss)等，主要的样式穿透如下 // 第一种/deep/ /deep/ .test { *** } // 第二种::v-deep ::v-deep .test{ *** }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T05:15:10.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:tag","content":"red"}],["meta",{"property":"article:published_time","content":"2022-01-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-09T05:15:10.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/Fankozhang/blog/zh/posts/apple/2.html"}]]},"excerpt":"<h1 id=\\"css\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#css\\" aria-hidden=\\"true\\">#</a> css</h1>\\n<h3 id=\\"文字溢出省略号\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#文字溢出省略号\\" aria-hidden=\\"true\\">#</a> <strong>文字溢出省略号:</strong></h3>\\n<p>文字单行溢出:</p>\\n<p><code v-pre>overflow: hidden;      // 溢出隐藏</code><br>\\n<code v-pre>text-overflow: ellipsis;   // 溢出用省略号显示</code><br>\\n<code v-pre>white-space: nowrap;     // 规定段落中的文本不进行换行</code></p>\\n<p>多行文字溢出:</p>\\n<p><code v-pre>overflow: hidden;      // 溢出隐藏  </code><br>\\n<code v-pre>text-overflow: ellipsis;   // 溢出用省略号显示  </code><br>\\n<code v-pre>display:-webkit-box;     // 作为弹性伸缩盒子模型显示。  </code><br>\\n<code v-pre>-webkit-box-orient:vertical; // 设置伸缩盒子的子元素排列方式：从上到下垂直排列  </code><br>\\n<code v-pre>-webkit-line-clamp:3;    // 显示的行数   </code></p>\\n<h3 id=\\"css变量\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#css变量\\" aria-hidden=\\"true\\">#</a> <strong>css变量：</strong></h3>\\n<p><strong>CSS变量</strong>又称<strong>CSS自定义属性</strong>，通过在<code v-pre>css</code>中自定义属性<code v-pre>--var</code>与函数<code v-pre>var()</code>组成，<code v-pre>var()</code>用于引用自定义属性。谈到为何会在<code v-pre>CSS</code>中使用变量，以下使用一个示例讲述。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre v-pre class=\\"language-javascript\\"><code><span class=\\"token operator\\">:</span>root <span class=\\"token punctuation\\">{</span>\\n <span class=\\"token operator\\">--</span>c<span class=\\"token operator\\">-</span>color<span class=\\"token operator\\">:</span> orange<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">.</span>title <span class=\\"token punctuation\\">{</span>\\n background<span class=\\"token operator\\">-</span>color<span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">var</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">--</span>c<span class=\\"token operator\\">-</span>color<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><h3 id=\\"渐变\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#渐变\\" aria-hidden=\\"true\\">#</a> <strong>渐变：</strong></h3>\\n<p>渐变分为<code v-pre>线性渐变</code>、<code v-pre>径向渐变</code>，这里笔者直接记录的使用方式，也是为了使用的时候更加的直观，这里说下，在使用线性渐变的时候，使用<code v-pre>角度</code>以及<code v-pre>百分比</code>去控制渐变，会更加的灵活</p>\\n<p>使用方式:</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre v-pre class=\\"language-text\\"><code>//渐变(方向)\\nbackground: linear-gradient(to right, rgba(255, 255, 255, 0),#3FB6F7,rgba(255,255,255,0));\\n\\n//渐变(角度)\\nbackground: linear-gradient(88deg, #4DF7BF 0%, rgba(77, 247, 191, 0.26) 12%, rgba(77, 247, 191, 0) 100%);\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>边框渐变:</p>\\n<p><code v-pre>border</code>有个<code v-pre>border-image</code>的属性，类似<code v-pre>background</code>也有个<code v-pre>background-image</code>一样,通过为其设置渐变颜色后，实现的渐变，后面的数字<code v-pre>4</code>为<code v-pre>x</code>方向偏移量</p>\\n<p>使用方式:</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre v-pre class=\\"language-text\\"><code>.border-grident{\\n  margin-top: 20px;\\n  width: 200px;\\n  height: 200px;\\n  border: 4px solid;\\n  border-image: linear-gradient(to right, #8f41e9, #578aef) 4;\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><h3 id=\\"background-size-cover和contain以及100\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#background-size-cover和contain以及100\\" aria-hidden=\\"true\\">#</a> <strong>background-size：cover和contain以及100%</strong></h3>\\n<p><code v-pre>contain</code>:<strong>图片放大至满足背景区域的最小边即止</strong>，当背景区域与背景图片的宽高比不一致的情况下，<strong>背景区域可能会长边下有空白覆盖不全</strong>。<code v-pre>cover</code>:<strong>图片放大至能满足最大变时为止</strong>，当背景区域与背景图片的宽高比不一致时，<strong>背景图片会在短边下有裁切，显示不全</strong>。</p>\\n<p><code v-pre>百分比</code>:可以设置两个值</p>\\n<ul>\\n<li>第一个设置宽度，第二个设置高度</li>\\n<li>如果只设置了一个值，那么第二个值默认会被设置为<code v-pre>auto</code></li>\\n</ul>\\n<h3 id=\\"elementui样式修改的几种方式\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#elementui样式修改的几种方式\\" aria-hidden=\\"true\\">#</a> <strong>elementui样式修改的几种方式:</strong></h3>\\n<p><code v-pre>vue</code>项目中，在修改<code v-pre>elementui</code>的样式时通常使用样式穿透，<code v-pre>style</code>使用<code v-pre>css</code>的预处理器(<code v-pre>less</code>, <code v-pre>sass</code>, <code v-pre>scss</code>)等，主要的样式穿透如下</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre v-pre class=\\"language-text\\"><code>// 第一种/deep/\\n/deep/ .test {\\n ***\\n}\\n// 第二种::v-deep\\n::v-deep .test{\\n ***\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","headers":[{"level":3,"title":"文字溢出省略号:","slug":"文字溢出省略号","link":"#文字溢出省略号","children":[]},{"level":3,"title":"css变量：","slug":"css变量","link":"#css变量","children":[]},{"level":3,"title":"渐变：","slug":"渐变","link":"#渐变","children":[]},{"level":3,"title":"background-size：cover和contain以及100%","slug":"background-size-cover和contain以及100","link":"#background-size-cover和contain以及100","children":[]},{"level":3,"title":"elementui样式修改的几种方式:","slug":"elementui样式修改的几种方式","link":"#elementui样式修改的几种方式","children":[]},{"level":2,"title":"Heading 2","slug":"heading-2","link":"#heading-2","children":[{"level":3,"title":"Heading 3","slug":"heading-3","link":"#heading-3","children":[]}]}],"git":{"createdTime":1669985669000,"updatedTime":1670562910000,"contributors":[{"name":"东方凝洛","email":"3180806542@qq.com","commits":3}]},"readingTime":{"minutes":2.15,"words":644},"autoDesc":true,"filePathRelative":"posts/apple/2.md","localizedDate":"January 2, 2022"}');export{e as data};
