import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,e as t,f as e,r as i}from"./app.00876173.js";const l={},u=n("h1",{id:"satoken",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#satoken","aria-hidden":"true"},"#"),s(" Satoken")],-1),d={href:"https://sa-token.cc/doc.html#/start/example",target:"_blank",rel:"noopener noreferrer"},r={href:"https://gitee.com/click33/springboot-pure",target:"_blank",rel:"noopener noreferrer"},k=e(`<h2 id="sa-token依赖" tabindex="-1"><a class="header-anchor" href="#sa-token依赖" aria-hidden="true">#</a> sa-token依赖</h2><p>注：如果你使用的是 SpringBoot 3.x，只需要将 <code>sa-token-spring-boot-starter</code> 修改为 <code>sa-token-spring-boot3-starter</code> 即可。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- Sa-Token 权限认证，在线文档：https://sa-token.cc --&gt;</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.dev33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>sa-token-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.37.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><p>可以<strong>零配置启动项目</strong> ，但同时你也可以在 <code>application.yml</code> 中增加如下配置，定制性使用框架</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token comment"># 端口</span>
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>

<span class="token comment">############## Sa-Token 配置 (文档: https://sa-token.cc) ##############</span>
<span class="token key atrule">sa-token</span><span class="token punctuation">:</span>
    <span class="token comment"># token 名称（同时也是 cookie 名称）</span>
    <span class="token key atrule">token-name</span><span class="token punctuation">:</span> satoken
    <span class="token comment"># token 有效期（单位：秒） 默认30天，-1 代表永久有效</span>
    <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">2592000</span>
    <span class="token comment"># token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结</span>
    <span class="token key atrule">active-timeout</span><span class="token punctuation">:</span> <span class="token number">-1</span>
    <span class="token comment"># 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）</span>
    <span class="token key atrule">is-concurrent</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token comment"># 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）</span>
    <span class="token key atrule">is-share</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token comment"># token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）</span>
    <span class="token key atrule">token-style</span><span class="token punctuation">:</span> uuid
    <span class="token comment"># 是否输出操作日志</span>
    <span class="token key atrule">is-log</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试功能controller" tabindex="-1"><a class="header-anchor" href="#测试功能controller" aria-hidden="true">#</a> 测试功能controller</h2><p>官网的登录功能测试</p>`,8),m={href:"https://gitee.com/dromara/sa-token/blob/master/sa-token-demo/sa-token-demo-case/src/main/java/com/pj/cases/use/LoginAuthController.java",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>
    <span class="token comment">// 测试登录，浏览器访问： http://localhost:8081/user/doLogin?username=zhang&amp;password=123456</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;doLogin&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doLogin</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 此处仅作模拟示例，真实项目需要从数据库中查询数据进行比对</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;zhang&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 会话登录：参数填写要登录的账号id，建议的数据类型：long | int | String， 不可以传入复杂类型，如：User、Admin 等等</span>
            <span class="token comment">// StpUtil.login(Object id);   </span>
            <span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token number">10001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;登录成功&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;登录失败&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 查询登录状态，浏览器访问： http://localhost:8081/user/isLogin</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;isLogin&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">isLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;当前会话是否登录：&quot;</span> <span class="token operator">+</span> <span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">isLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
     <span class="token comment">// 查询 Token 信息  ---- http://localhost:8081/acc/tokenInfo</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;tokenInfo&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">SaResult</span> <span class="token function">tokenInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">SaResult</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">getTokenInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// 测试注销  ---- http://localhost:8081/acc/logout</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;logout&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">SaResult</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">SaResult</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="权限认证" tabindex="-1"><a class="header-anchor" href="#权限认证" aria-hidden="true">#</a> 权限认证</h2><h3 id="获取当前账号权限码集合" tabindex="-1"><a class="header-anchor" href="#获取当前账号权限码集合" aria-hidden="true">#</a> 获取当前账号权限码集合</h3><p>你需要做的就是新建一个类，实现 <code>StpInterface</code>接口，例如以下代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 自定义权限认证接口扩展，Sa-Token 将从此实现类获取每个账号拥有的权限码
 *
 * <span class="token keyword">@author</span> click33
 * <span class="token keyword">@since</span> 2022-10-13
 */</span>
<span class="token annotation punctuation">@Component</span>    <span class="token comment">// 打开此注解，保证此类被springboot扫描，即可完成sa-token的自定义权限验证扩展</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StpInterfaceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">StpInterface</span> <span class="token punctuation">{</span>
    
    <span class="token comment">//参数解释：</span>
    <span class="token comment">//loginId：账号id，即你在调用 StpUtil.login(id) 时写入的标识值。</span>
    <span class="token comment">//loginType：账号体系标识，此处可以暂时忽略，在 [ 多账户认证 ] 章节下会对这个概念做详细的解释。</span>

    <span class="token doc-comment comment">/**
     * 返回一个账号所拥有的权限码集合
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPermissionList</span><span class="token punctuation">(</span><span class="token class-name">Object</span> loginId<span class="token punctuation">,</span> <span class="token class-name">String</span> loginType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 本list仅做模拟，实际项目中要根据具体业务逻辑来查询权限</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;101&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;user.add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;user.update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;user.get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// list.add(&quot;user.delete&quot;);</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;art.*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 返回一个账号所拥有的角色标识集合
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRoleList</span><span class="token punctuation">(</span><span class="token class-name">Object</span> loginId<span class="token punctuation">,</span> <span class="token class-name">String</span> loginType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 本list仅做模拟，实际项目中要根据具体业务逻辑来查询角色</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;super-admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),b={id:"权限校验",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#权限校验","aria-hidden":"true"},"#",-1),h={href:"https://sa-token.cc/doc.html#/use/jur-auth?id=_3%E3%80%81%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C",target:"_blank",rel:"noopener noreferrer"},f=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取：当前账号所拥有的权限集合</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">getPermissionList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 判断：当前账号是否含有指定权限, 返回 true 或 false</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;user.add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        

<span class="token comment">// 校验：当前账号是否含有指定权限, 如果验证未通过，则抛出异常: NotPermissionException </span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span><span class="token string">&quot;user.add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        

<span class="token comment">// 校验：当前账号是否含有指定权限 [指定多个，必须全部验证通过]</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">checkPermissionAnd</span><span class="token punctuation">(</span><span class="token string">&quot;user.add&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user.delete&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user.get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        

<span class="token comment">// 校验：当前账号是否含有指定权限 [指定多个，只要其一验证通过即可]</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">checkPermissionOr</span><span class="token punctuation">(</span><span class="token string">&quot;user.add&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user.delete&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user.get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token comment">// 扩展：NotPermissionException 对象可通过 getLoginType() 方法获取具体是哪个 StpLogic 抛出的异常</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q={id:"角色校验",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#角色校验","aria-hidden":"true"},"#",-1),S={href:"https://sa-token.cc/doc.html#/use/jur-auth?id=_4%E3%80%81%E8%A7%92%E8%89%B2%E6%A0%A1%E9%AA%8C",target:"_blank",rel:"noopener noreferrer"},x=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取：当前账号所拥有的角色集合</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">getRoleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 判断：当前账号是否拥有指定角色, 返回 true 或 false</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">&quot;super-admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        

<span class="token comment">// 校验：当前账号是否含有指定角色标识, 如果验证未通过，则抛出异常: NotRoleException</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">checkRole</span><span class="token punctuation">(</span><span class="token string">&quot;super-admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        

<span class="token comment">// 校验：当前账号是否含有指定角色标识 [指定多个，必须全部验证通过]</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">checkRoleAnd</span><span class="token punctuation">(</span><span class="token string">&quot;super-admin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;shop-admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        

<span class="token comment">// 校验：当前账号是否含有指定角色标识 [指定多个，只要其一验证通过即可] </span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">checkRoleOr</span><span class="token punctuation">(</span><span class="token string">&quot;super-admin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;shop-admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//扩展：NotRoleException 对象可通过 getLoginType() 方法获取具体是哪个 StpLogic 抛出的异常</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拦截全局异常" tabindex="-1"><a class="header-anchor" href="#拦截全局异常" aria-hidden="true">#</a> 拦截全局异常</h3><p>你可以创建一个全局异常拦截器，统一返回给前端的格式，参考：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@RestControllerAdvice
public class GlobalExceptionHandler {
    // 全局异常拦截 
    @ExceptionHandler
    public SaResult handlerException(Exception e) {
        e.printStackTrace(); 
        return SaResult.error(e.getMessage());
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://gitee.com/dromara/sa-token/blob/master/sa-token-demo/sa-token-demo-case/src/main/java/com/pj/current/GlobalException.java",target:"_blank",rel:"noopener noreferrer"},j={id:"权限通配符",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#权限通配符","aria-hidden":"true"},"#",-1),w={href:"https://sa-token.cc/doc.html#/use/jur-auth?id=_6%E3%80%81%E6%9D%83%E9%99%90%E9%80%9A%E9%85%8D%E7%AC%A6",target:"_blank",rel:"noopener noreferrer"},U=e(`<p>Sa-Token允许你根据通配符指定<strong>泛权限</strong>，例如当一个账号拥有<code>art.*</code>的权限时，<code>art.add</code>、<code>art.delete</code>、<code>art.update</code>都将匹配通过</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 当拥有 art.* 权限时</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;art.add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// true</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;art.update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// true</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;goods.add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// false</span>

<span class="token comment">// 当拥有 *.delete 权限时</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;art.delete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// true</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;user.delete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// true</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;user.update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// false</span>

<span class="token comment">// 当拥有 *.js 权限时</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;index.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// true</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;index.css&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// false</span>
<span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token string">&quot;index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// false</span>

<span class="token comment">//上帝权限：当一个账号拥有 &quot;*&quot; 权限时，他可以验证通过任何权限码 （角色认证同理）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="权限精确到按钮级" tabindex="-1"><a class="header-anchor" href="#权限精确到按钮级" aria-hidden="true">#</a> 权限精确到按钮级？</h3><p>思路：如此精确的范围控制只依赖后端已经难以完成，此时需要前端进行一定的逻辑判断。</p><ol><li>在登录时，把当前账号拥有的所有权限码一次性返回给前端。</li><li>前端将权限码集合保存在<code>localStorage</code>或其它全局状态管理对象中。</li><li>在需要权限控制的按钮上，使用 js 进行逻辑判断，例如在<code>Vue</code>框架中我们可以使用如下写法：</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;button v-if=&quot;arr.indexOf(&#39;user.delete&#39;) &gt; -1&quot;&gt;删除按钮&lt;/button&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>其中：<code>arr</code>是当前用户拥有的权限码数组，<code>user.delete</code>是显示按钮需要拥有的权限码，<code>删除按钮</code>是用户拥有权限码才可以看到的内容。</li></ol><p>注意：以上写法只为提供一个参考示例，不同框架有不同写法，大家可根据项目技术栈灵活封装进行调用。</p>`,8);function L(R,A){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("官网 (文档特别清晰，跟着文档学习即可) ："),n("a",d,[s("在 SpringBoot 环境集成 (sa-token.cc)"),t(a)])]),n("p",null,[s("纯净的springBoot示例项目："),n("a",r,[s("刘潇/springboot-pure - 码云 - 开源中国 (gitee.com)"),t(a)])]),k,n("p",null,[s("示例代码："),n("a",m,[s("sa-token-demo/sa-token-demo-case/src/main/java/com/pj/cases/use/LoginAuthController.java · dromara/Sa-Token - Gitee.com"),t(a)])]),v,n("h3",b,[g,s(),n("a",h,[s("权限校验"),t(a)])]),f,n("h3",q,[_,s(),n("a",S,[s("角色校验"),t(a)])]),x,n("p",null,[s("详细参考 ： 码云：GlobalException.java]("),n("a",y,[s("https://gitee.com/dromara/sa-token/blob/master/sa-token-demo/sa-token-demo-case/src/main/java/com/pj/current/GlobalException.java"),t(a)]),s(")")]),n("h3",j,[E,s(),n("a",w,[s("权限通配符"),t(a)])]),U])}const T=p(l,[["render",L],["__file","sa-token.html.vue"]]);export{T as default};
