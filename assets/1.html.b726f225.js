import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as p,a as n,b as s,e as t,f as e,r as o}from"./app.b272a3b6.js";const c={},u=e(`<h1 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> html</h1><h2 id="自定义属性-data" tabindex="-1"><a class="header-anchor" href="#自定义属性-data" aria-hidden="true">#</a> 自定义属性 data-*</h2><p>html标签自定义属性 data-* 可以用来保存 一些与不同DOM元素相关联的信息 。 自定义属性可以设置多个</p><p>如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;li id=&quot;id&quot;  data-num=&quot;1&quot;  data-names=&quot;zhangsan&quot;  data-age=&quot;999&quot;&gt;
  Hello world
&lt;/li&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 js 获取自定义属性</p><p>1 使用 getAttribute 和 setAttribute</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var restaurant = document.getElementById(&quot;id&quot;);
var strings = restaurant.getAttribute(&quot;data-num&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var restaurant = document.getElementById(&quot;id&quot;);
restaurant.setAttribute(&quot;data-num&quot;, &quot;dataNum&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2 使用dataset属性</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var restaurant = document.getElementById(&quot;id&quot;);

var stringss = restaurant.dataset.num;   // 通过dataset获取自定义属性
restaurant.dataset.num = newNum;         //  设置自定义属性的值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="table表格设置边线为单边线" tabindex="-1"><a class="header-anchor" href="#table表格设置边线为单边线" aria-hidden="true">#</a> table表格设置边线为单边线</h2><p><strong>css border-collapse属性</strong></p><p>border-collapse：属性，为表格设置合并边框模型。 其属性值如下： separate：默认值。边框会被分开。 collapse：将边框会合并为一个单线的边框 inherit：继承父元素的 border-collapse 属性的值，早期IE浏览器不支持此值。 实现 table 的单线边框的办法 为 table 表格的样式，为入 border-collapse 属性即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>   &lt;table&gt;
        &lt;tr&gt;
            &lt;td&gt;内容&lt;/td&gt;
            &lt;td&gt;内容&lt;/td&gt;
            &lt;td&gt;内容&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;内容&lt;/td&gt;
            &lt;td&gt;内容&lt;/td&gt;
            &lt;td&gt;内容&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;内容&lt;/td&gt;
            &lt;td&gt;内容&lt;/td&gt;
            &lt;td&gt;内容&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
    
    &lt;style&gt;
    	    table,table tr td { 
                border:1px solid #ccc; 
                 border-collapse:collapse
            }
            table tr td{
                padding: 5px 10px;
            }
    &lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="input-上传文件" tabindex="-1"><a class="header-anchor" href="#input-上传文件" aria-hidden="true">#</a> input 上传文件</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;file&quot;</span> onchange<span class="token operator">=</span><span class="token string">&quot;uploadFile&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token keyword">const</span> <span class="token function-variable function">uploadFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// reader.readAsText(e.target.files[0])  //读取text文件内容</span>
  reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取内容</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>FileReader</code> 对象是 Web API 的一部分，它提供了几种方法来读取文件，并将文件内容转换为 JavaScript 可以使用的格式。以下是 <code>FileReader</code> 的主要方法：</p><ol><li><strong>readAsArrayBuffer(file)</strong>： <ul><li>读取文件的内容，并将其作为 ArrayBuffer 对象返回。这对于处理二进制文件（如图像或音频文件）非常有用。</li></ul></li><li><strong>readAsBinaryString(file)</strong>： <ul><li>读取文件的内容，并将其作为二进制字符串返回。这个方法在现代浏览器中已经不推荐使用，因为它的性能较差。</li></ul></li><li><strong>readAsDataURL(file)</strong>： <ul><li>读取文件的内容，并将其作为 data URL 返回。这对于在网页上直接显示图像或视频等媒体内容非常有用。</li></ul></li><li><strong>readAsText(file, [encoding])</strong>： <ul><li>读取文件的内容，并将其作为文本字符串返回。可以指定一个可选的编码参数，通常用于非 UTF-8 编码的文本文件。如果不指定编码，默认使用 UTF-8 编码。</li></ul></li></ol><p>每个方法都会触发 <code>FileReader</code> 的 <code>onload</code> 事件，当文件读取完成后，可以通过 <code>e.target.result</code> 访问读取的内容。如果读取过程中发生错误，会触发 <code>onerror</code> 事件。如果用户在读取完成前取消了文件读取，会触发 <code>onabort</code> 事件。</p><h2 id="ul-li-去除前面的黑点" tabindex="-1"><a class="header-anchor" href="#ul-li-去除前面的黑点" aria-hidden="true">#</a> ul li 去除前面的黑点</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ul {
      list-style-type: none;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>list-style-type: &quot;123&quot;;   &quot;&quot;里面的内容展示在 li 标签前面

//  list-style-type 常用属性值有以下几个
1 none不使用项目符号    
2 disc实心圆，默认值    
3 circle空心圆    
4 square实心方块    
5 decimal阿拉伯数字    
6 lower-roman小写罗马数字    
7 upper-roman大写罗马数字    
8 lower-alpha小写英文字母    
9 upper-alpha大写英文字母
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="audio-video" tabindex="-1"><a class="header-anchor" href="#audio-video" aria-hidden="true">#</a> audio video</h2><p><code>audio</code>用于在文档中表示用品内容，比如音乐。\`\`可以包含多个音频资源，使用<code>src</code>或者<code>source</code>属性进行描述，浏览器会选择最合适的来用。当前它只支持三种音频格式：MP3, WAV, and OGG。</p>`,25),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio",target:"_blank",rel:"noopener noreferrer"},r=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- Won&#39;t play because the mp3 doesn&#39;t exist --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cat.mp3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>audio/mpeg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Your browser does not support the audio tag.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
对于不考虑兼容问题时，可以直接将src设置在 audio 标签里
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>horse.mp3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Video</code>用来处理电影或者视频流。这个可能是大家最熟悉的标签之一了。它现在支持的视频格式包括： MP4, WebM, and Ogg 。</p>`,2),v={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video",target:"_blank",rel:"noopener noreferrer"},m=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>320<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>240<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>movie.mp4<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video/mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>movie.ogg<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video/ogg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  您的浏览器不支持 HTML5 video 标签。
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>

对于不考虑兼容问题时，可以直接将src设置在video标签里

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>320<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>240<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>movie.mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="progress-进度条" tabindex="-1"><a class="header-anchor" href="#progress-进度条" aria-hidden="true">#</a> progress 进度条</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;progress id=&quot;file&quot; max=&quot;100&quot; value=&quot;70&quot;&gt; 70% &lt;/progress&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="details-标签-挂件-实现下拉展示" tabindex="-1"><a class="header-anchor" href="#details-标签-挂件-实现下拉展示" aria-hidden="true">#</a> details 标签 挂件（实现下拉展示）</h2><p><code>details</code>可以创建一个挂件，默认处于关闭状态，仅在被切换成展开状态时才会显示隐藏的内容信息。可以在其中嵌入<code>summary</code>标签，为该部件提供概要。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;details&gt;
  &lt;summary&gt;总结&lt;/summary&gt;
  &lt;!-- 非必填，默认显示“详细信息” --&gt;
  我是内容，我是内容。我是内容，我是内容。我是内容，我是内容。
&lt;/details&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="template" tabindex="-1"><a class="header-anchor" href="#template" aria-hidden="true">#</a> Template</h2><p><code>Template</code>用来包含一些在页面加载时不会呈现的内容，但随后可以在运行时使用javascript进行实例化。</p><p>可以用来存储一段后续要用到的内容片段，减少了在JavaScript实例化节点时创建模版内容的过程。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>前端记事本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>前端记事本前端记事本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在javascript中可以使用这部分模版来实例化节点</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createNewNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> node<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关技术文章" tabindex="-1"><a class="header-anchor" href="#相关技术文章" aria-hidden="true">#</a> 相关技术文章</h2>`,13),k={href:"https://mp.weixin.qq.com/s/xE1hz1DV961eMD0AvfwlgQ",target:"_blank",rel:"noopener noreferrer"};function g(b,h){const a=o("ExternalLinkIcon");return i(),p("div",null,[u,n("p",null,[n("a",d,[s("https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio"),t(a)])]),r,n("p",null,[n("a",v,[s("https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video"),t(a)])]),m,n("p",null,[n("a",k,[s("分享24个强大的HTML属性，建议每位前端工程师都应该掌握！ (qq.com)"),t(a)])])])}const f=l(c,[["render",g],["__file","1.html.vue"]]);export{f as default};
