import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,e as t,f as p,r as i}from"./app.1778f713.js";const l="/blog/image-20240422001017407.png",u="/blog/image-20231118025204427.png",r={},k=n("h1",{id:"harmony",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#harmony","aria-hidden":"true"},"#"),s(" Harmony")],-1),d={href:"https://developer.huawei.com/consumer/cn/training/harmonyOS/l44yheg8?ha_source=HM-yetou&ha_sourceId=89000240",target:"_blank",rel:"noopener noreferrer"},v={href:"https://mp.weixin.qq.com/s/LFvY152vujufw0UL3Oqp7A",target:"_blank",rel:"noopener noreferrer"},m={href:"https://harmonyos-next.github.io/interview-handbook-project/guide/index.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.arkui.club/",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"视频教程：",-1),f={href:"https://www.bilibili.com/video/BV1Sa4y1Z7B1/?spm_id_from=333.337.search-card.all.click&vd_source=f25f5a8d75a3a60d5a288f726803ec11",target:"_blank",rel:"noopener noreferrer"},g={href:"https://b11et3un53m.feishu.cn/wiki/LGprwXi1biC7TQkWPNDc45IXndh",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.bilibili.com/video/BV14t421W7pA?p=2&vd_source=f25f5a8d75a3a60d5a288f726803ec11",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.bilibili.com/video/BV1kr421W7rV?p=1&vd_source=f25f5a8d75a3a60d5a288f726803ec11",target:"_blank",rel:"noopener noreferrer"},_={href:"https://blog.csdn.net/viewinfinitely/category_12522845.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://blog.csdn.net/Mayism123?type=blog",target:"_blank",rel:"noopener noreferrer"},C={href:"https://gitee.com/fankozhang/harmony-project",target:"_blank",rel:"noopener noreferrer"},T={href:"https://pan.xunlei.com/s/VNmt7B70WUGbGL0SZ5kgYw7hA1?pwd=yptb#",target:"_blank",rel:"noopener noreferrer"},q={href:"https://pan.xunlei.com/s/VNmt7HMNtf_MyZVjtf6GNcaZA1?pwd=wymn#",target:"_blank",rel:"noopener noreferrer"},S={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/application-dev-guide-V5",target:"_blank",rel:"noopener noreferrer"},A=n("h2",{id:"deveco-studio-下载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deveco-studio-下载","aria-hidden":"true"},"#"),s(" DevEco Studio 下载")],-1),I={href:"https://developer.huawei.com/consumer/cn/deveco-studio/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-guides-V3/deveco_overview-0000001053582387-V3?catalogVersion=V3",target:"_blank",rel:"noopener noreferrer"},P=n("h3",{id:"快捷键",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#快捷键","aria-hidden":"true"},"#"),s(" 快捷键")],-1),E={href:"https://juejin.cn/post/7059308783532507150",target:"_blank",rel:"noopener noreferrer"},B=n("h2",{id:"工程目录结构",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#工程目录结构","aria-hidden":"true"},"#"),s(" 工程目录结构")],-1),V={href:"https://blog.csdn.net/weixin_40763897/article/details/135731357",target:"_blank",rel:"noopener noreferrer"},M=p(`<p>注意：</p><p>静态文件的文件名最好用 驼峰命名，不要有 - 之类的特殊字符，否则编译会报错</p><h2 id="修改应用名称-中文模式下" tabindex="-1"><a class="header-anchor" href="#修改应用名称-中文模式下" aria-hidden="true">#</a> 修改应用名称（中文模式下）</h2><p>entry/src/main/resources/zh_CN</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
      &quot;name&quot;: &quot;EntryAbility_label&quot;,
      &quot;value&quot;: &quot;我的newDemo&quot;
 }
 
 value的值就是应用名称的值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="入口组件" tabindex="-1"><a class="header-anchor" href="#入口组件" aria-hidden="true">#</a> 入口组件</h2><p><img src="`+l+'" alt="image-20240422001017407" loading="lazy"></p><h2 id="应用程序入口-uiability" tabindex="-1"><a class="header-anchor" href="#应用程序入口-uiability" aria-hidden="true">#</a> 应用程序入口 UIAbility</h2><p>UIAbility是一种包含用户界面的应用组件，主要用于和用户进行交互。UIAbility也是系统调度的单元，为应用提供窗口在其中绘制界面。</p><p>每一个UIAbility实例，都对应于一个最近任务列表中的任务。</p><p>一个应用可以有一个UIAbility，也可以有多个UIAbility</p><p>UIAbility的生命周期包括Create、Foreground、Background、Destroy四个状态，WindowStageCreate和WindowStageDestroy为窗口管理器（WindowStage）在UIAbility中管理UI界面功能的两个生命周期回调，从而实现UIAbility与窗口之间的弱耦合。</p>',12),R={href:"https://developer.huawei.com/consumer/cn/training/course/slightMooc/C101667310940295021",target:"_blank",rel:"noopener noreferrer"},D=n("strong",null,"UIAblility的启动模式（多实例）",-1),L={href:"https://www.bilibili.com/video/BV1Sa4y1Z7B1?p=27&spm_id_from=pageDriver&vd_source=f25f5a8d75a3a60d5a288f726803ec11",target:"_blank",rel:"noopener noreferrer"},W={href:"https://bbs.huaweicloud.com/blogs/416898",target:"_blank",rel:"noopener noreferrer"},F={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-inner-application-uiabilitycontext-0000001478341321-V2",target:"_blank",rel:"noopener noreferrer"},O=n("h3",{id:"entryability",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#entryability","aria-hidden":"true"},"#"),s(" EntryAbility")],-1),U=n("p",null,"src/main/ets/entryability/EntryAbility.ts",-1),$=n("p",null,"里面包含了 UiAbility 的生命周期",-1),H=n("h3",{id:"新增ability-ability跳转",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#新增ability-ability跳转","aria-hidden":"true"},"#"),s(" 新增ability (ability跳转)")],-1),z={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/abilitystage-0000001427584604-V2",target:"_blank",rel:"noopener noreferrer"},j=p(`<p>ets 文件夹右键-》新建 -》 ability</p><p>在新建的 ability 文件中修改 windowStage.loadContent 的路径</p><p>ability 页面路径跳转 (以下只展示了页面跳转，带参数的还要添加参数)</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Want <span class="token keyword">from</span> <span class="token string">&#39;@ohos.app.ability.Want&#39;</span><span class="token punctuation">;</span>

<span class="token function">goHealthAbility</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 跳转到别的UIability</span>
    <span class="token comment">//跳转到目的地 want</span>
    <span class="token keyword">let</span> want<span class="token operator">:</span>Want<span class="token operator">=</span><span class="token punctuation">{</span>
      <span class="token comment">// deviceId :&#39;&#39; , // 指示查询的设备ID。</span>
      bundleName<span class="token operator">:</span><span class="token string">&quot;com.example.stydyproject&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// moduleName:&#39;entry&#39;,</span>
      abilityName<span class="token operator">:</span><span class="token string">&quot;healthAbility&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;want&quot;</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>want<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">//跳转</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">startAbility</span><span class="token punctuation">(</span>want<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页面-router路由操作" tabindex="-1"><a class="header-anchor" href="#页面-router路由操作" aria-hidden="true">#</a> 页面（router路由操作）</h2><h3 id="路由跳转的page页面配置位置" tabindex="-1"><a class="header-anchor" href="#路由跳转的page页面配置位置" aria-hidden="true">#</a> 路由跳转的page页面配置位置</h3><p>src/main/resources/base/profile/main_pages.json 文件保存的是页面page的路径配置信息，所有需要进行路由跳转的page页面都要在这里进行配置。</p><h3 id="新建页面" tabindex="-1"><a class="header-anchor" href="#新建页面" aria-hidden="true">#</a> 新建页面</h3><p><img src="`+u+`" alt="" loading="lazy"></p><p>使用此方法新建的页面，会自动在 src/main/resources/base/profile/main_pages.json 生成页面配置</p><p><strong>新建页面后模板</strong></p><p>一个页面只能有一个 @Entry 修饰的自定义组件 （此处修改内容从左上角开始展示）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@Entry
@Component
struct AboutPage {
  @State message: string = &#39;about&#39;

  build() {
    Row() {
      Column() {
        Text(this.message)
          .fontSize(50)
          .fontWeight(FontWeight.Bold)
      }
      .width(&#39;100%&#39;)
      .alignItems(HorizontalAlign.Start)    // 横向从左边开始显示
    }
    .height(&#39;100%&#39;)
    .alignItems(VerticalAlign.Top)    // 竖直方向从上面开始显示
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="页面跳转-传参-返回传参" tabindex="-1"><a class="header-anchor" href="#页面跳转-传参-返回传参" aria-hidden="true">#</a> 页面跳转（传参，返回传参）</h3>`,14),Z={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-routing-0000001503325125-V2",target:"_blank",rel:"noopener noreferrer"},G={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-router-0000001478061893-V2#ZH-CN_TOPIC_0000001523808578__routerback",target:"_blank",rel:"noopener noreferrer"},J=n("li",null,"router.replaceUrl()：目标页会替换当前页，并销毁当前页。这样可以释放当前页的资源，并且无法返回到当前页。",-1),K=p(`<p>index.ets</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import router from &#39;@ohos.router&#39;;

 Button(&quot;按钮&quot;).onClick(()=&gt;{
          router.pushUrl({
            //  跳转到的页面地址, Next,ets
            url:&#39;pages/Next&#39;,
            //  传递参数
            params: {
              src:&#39;传参了&#39;,
            }
          })
        },router.RouterMode.Single)
        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RouterMode有以下两种选择，选择适当的模式可以提升性能</p><table><thead><tr><th>Standard</th><th>多实例模式，也是默认情况下的跳转模式。目标页面会被添加到页面栈顶，无论栈中是否存在相同url的页面。**说明：**不使用路由跳转模式时，则按照默认的多实例模式进行跳转。</th></tr></thead><tbody><tr><td>Single</td><td>单实例模式。如果目标页面的url已经存在于页面栈中，则该url页面移动到栈顶。如果目标页面的url在页面栈中不存在同url页面，则按照默认的多实例模式进行跳转。</td></tr></tbody></table><p>Next.ets （接收index跳转传递过来的参数）</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;@ohos.router&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 接收传递来的参数</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> src<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token punctuation">[</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">]</span>

<span class="token comment">// 渲染数据到页面上</span>
 <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>src<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
          
<span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&quot;返回&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>

          <span class="token comment">//  返回上一个页面</span>
          router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          
          <span class="token comment">//  返回到指定页面。</span>
          router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;pages/Index&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          
          <span class="token comment">// 如调用 router.clear() 方法清空了页面栈中所有历史页面，仅保留当前页面，此时则无法通过调用router.back()方法返回到上一个页面。</span>
        
         router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              url<span class="token operator">:</span> <span class="token string">&#39;pages/Index&#39;</span><span class="token punctuation">,</span>
              params<span class="token operator">:</span> <span class="token punctuation">{</span>
                src<span class="token operator">:</span> <span class="token string">&#39;Next页面传来的数据&#39;</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>index.ets 从 Next.ets 返回时传参的获取</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import router from &#39;@ohos.router&#39;;

@State src: string = &#39;&#39;;
  onPageShow() {
    this.src = (router.getParams() as Record&lt;string, string&gt;)[&#39;src&#39;];
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用router.back()方法之前，可以先调用router.enableBackPageAlert()方法开启页面返回询问对话框功能。</p><p>说明</p><ul><li>router.enableBackPageAlert()方法开启页面返回询问对话框功能，只针对当前页面生效。例如在调用router.pushUrl()或者router.replaceUrl()方法，跳转后的页面均为新建页面，因此在页面返回之前均需要先调用router.enableBackPageAlert()方法之后，页面返回询问对话框功能才会生效。</li><li>如需关闭页面返回询问对话框功能，可以通过调用router.disableAlertBeforeBackPage()方法关闭该功能即可。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>router.enableBackPageAlert({
  message: &#39;Message Info&#39;
});

router.back();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义组件" tabindex="-1"><a class="header-anchor" href="#自定义组件" aria-hidden="true">#</a> 自定义组件</h2>`,13),Q={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-create-custom-components-0000001473537046-V2",target:"_blank",rel:"noopener noreferrer"},X=p(`<p>相比于页面组件不需要 @Entry 修饰，需要有 @Component 修饰</p><p>可以使用 export 导出组件，在使用 import 导入组件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;@ohos.router&#39;</span><span class="token punctuation">;</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
<span class="token keyword">export</span> struct  TitleBar<span class="token punctuation">{</span>
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>TitleBar<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../components/titleBar&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="页面和自定义组件生命周期" tabindex="-1"><a class="header-anchor" href="#页面和自定义组件生命周期" aria-hidden="true">#</a> 页面和自定义组件生命周期</h2>`,5),Y={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-page-custom-components-lifecycle-0000001524296665-V2",target:"_blank",rel:"noopener noreferrer"},nn=n("p",null,"页面生命周期，即被@Entry装饰的组件生命周期，提供以下生命周期接口：",-1),sn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/arkts-custom-component-lifecycle-0000001482395076-V2#ZH-CN_TOPIC_0000001523488850__onpageshow",target:"_blank",rel:"noopener noreferrer"},an={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/arkts-custom-component-lifecycle-0000001482395076-V2#ZH-CN_TOPIC_0000001523488850__onpagehide",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/arkts-custom-component-lifecycle-0000001482395076-V2#ZH-CN_TOPIC_0000001523488850__onbackpress",target:"_blank",rel:"noopener noreferrer"},pn=n("p",null,"组件生命周期，即一般用@Component装饰的自定义组件的生命周期，提供以下生命周期接口：",-1),en={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/arkts-custom-component-lifecycle-0000001482395076-V2#ZH-CN_TOPIC_0000001523488850__abouttoappear",target:"_blank",rel:"noopener noreferrer"},on={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/arkts-custom-component-lifecycle-0000001482395076-V2#ZH-CN_TOPIC_0000001523488850__abouttodisappear",target:"_blank",rel:"noopener noreferrer"},cn=n("h2",{id:"装饰器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#装饰器","aria-hidden":"true"},"#"),s(" 装饰器")],-1),ln=n("h3",{id:"styles装饰器-定义组件重用样式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#styles装饰器-定义组件重用样式","aria-hidden":"true"},"#"),s(" @Styles装饰器：定义组件重用样式")],-1),un=n("p",null,[n("strong",null,"只能在当前文件内使用，不支持export。")],-1),rn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/ts-universal-attributes-size-0000001428061700-V2",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/ts-universal-events-click-0000001477981153-V2",target:"_blank",rel:"noopener noreferrer"},dn=p(`<p>@Styles可以定义在组件内或全局，在全局定义时需在方法名前面添加function关键字，组件内定义时则不需要添加function关键字。</p><p>定义在组件内的@Styles可以通过this访问组件的常量和状态变量，并可以在@Styles里通过事件来改变状态变量的值</p><p>组件内@Styles的优先级高于全局@Styles。</p><p>示例：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 定义在全局的@Styles封装的样式 (需要加 function )</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Styles</span></span> <span class="token keyword">function</span> <span class="token function">globalFancy</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Pink<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct NewPage <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Hello World1234&#39;</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> colorIn<span class="token operator">:</span>Color<span class="token operator">=</span>Color<span class="token punctuation">.</span>Red
  <span class="token comment">// 定义在组件内部的@Styles封装的样式</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Styles</span></span> <span class="token function">fancy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>colorIn<span class="token punctuation">)</span>  <span class="token comment">//可以使用组件内的变量</span>
    <span class="token punctuation">.</span><span class="token function">borderRadius</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>       <span class="token comment">// 点击可以改变状态值，实现改变样式</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>colorIn <span class="token operator">=</span> Color<span class="token punctuation">.</span>Yellow
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">.</span><span class="token function">fancy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// 使用组件内部的自定义的样式</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">globalFancy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// 使用全局定义的自定义的样式</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="prop-link-state状态装饰器" tabindex="-1"><a class="header-anchor" href="#prop-link-state状态装饰器" aria-hidden="true">#</a> @Prop@Link@State状态装饰器</h3>`,6),vn={href:"https://blog.csdn.net/Viewinfinitely/article/details/134772944",target:"_blank",rel:"noopener noreferrer"},mn=p(`<p>@Prop 数据父子单向绑定</p><p>@Link 数据父子双向绑定</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct NewPage <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> date<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;时间：&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> num<span class="token operator">:</span><span class="token builtin">number</span><span class="token operator">=</span><span class="token number">8</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>date<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>

        <span class="token function">timeItem</span><span class="token punctuation">(</span><span class="token punctuation">{</span>time<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>date<span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token comment">// 必须初始化子组件的time字段 (@Prop)</span>
        <span class="token function">CounterExample</span><span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token operator">:</span>$num<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">// 初始化子组件时传递属性使用$符号(@Link)</span>

      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>

    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>


  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 子组件展示props使用</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span> struct timeItem <span class="token punctuation">{</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span> time<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>                                <span class="token comment">// 不允许本地初始化</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">子组件【</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">】</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Grey<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">=</span> <span class="token string">&quot;时间：&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 子组件的更改不影响父组件</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token comment">// 子组件展示@Link使用</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct CounterExample <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Link</span></span> value<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 计数器组件</span>
      <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">onInc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token operator">++</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">onDec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token operator">--</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;100%&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="provide和-consume-与后代双向同步" tabindex="-1"><a class="header-anchor" href="#provide和-consume-与后代双向同步" aria-hidden="true">#</a> @Provide和@Consume：与后代双向同步</h3><p>其中@Provide装饰的变量是在祖先节点中，可以理解为被“提供”给后代的状态变量。@Consume装饰的变量是在后代组件中，去“消费（绑定）”祖先节点提供的变量。</p>`,5),bn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-provide-and-consume-0000001473857338-V2",target:"_blank",rel:"noopener noreferrer"},hn=n("h3",{id:"observed-objectlink嵌套类对象属性变化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#observed-objectlink嵌套类对象属性变化","aria-hidden":"true"},"#"),s(" @Observed@ObjectLink嵌套类对象属性变化")],-1),fn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-observed-and-objectlink-0000001473697338-V2",target:"_blank",rel:"noopener noreferrer"},gn=p(`<h3 id="watch-监听状态变量的变化" tabindex="-1"><a class="header-anchor" href="#watch-监听状态变量的变化" aria-hidden="true">#</a> @Watch（监听状态变量的变化）</h3><p><code>@Watch</code> 用来监听状态变量的变化，当它修饰的状态变量发生变更时，回调相应的方法</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@State @Watch(&quot;function_name&quot;) count : number = 0;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>给状态变量 <code>count</code> 增加一个 <code>@Watch</code> 装饰器，通过 <code>@Watch</code> 注册一个回调方法 <code>function_name</code> ， 当状态变量 <code>count</code> 被改变时， 触发 <code>function_name</code> 回调。</p><p>示例：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct NewPage <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Watch</span></span><span class="token punctuation">(</span><span class="token string">&quot;onBasketUpdated&quot;</span><span class="token punctuation">)</span> shopBasket<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> totalPurchase<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token function">updateTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>shopBasket<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 计算新的购物篮总价值，如果超过100RMB，则适用折扣</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>totalPurchase <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">?</span> sum <span class="token operator">:</span> <span class="token number">0.9</span> <span class="token operator">*</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPurchase<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">onBasketUpdated</span><span class="token punctuation">(</span>propName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span>space<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>totalPurchase<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>

      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&quot;add to basket&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>shopBasket<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;100%&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&quot;100%&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="builder装饰器-自定义构建函数" tabindex="-1"><a class="header-anchor" href="#builder装饰器-自定义构建函数" aria-hidden="true">#</a> @Builder装饰器：自定义构建函数</h3><p>ArkUI提供了一种更轻量的UI元素复用机制@Builder，@Builder所装饰的函数遵循build()函数语法规则，开发者可以将重复使用的UI元素抽象成一个方法，在build方法里调用。</p><p>为了简化语言，我们将@Builder装饰的函数也称为“自定义构建函数”。</p><h4 id="自定义组件内自定义构建函数" tabindex="-1"><a class="header-anchor" href="#自定义组件内自定义构建函数" aria-hidden="true">#</a> 自定义组件内自定义构建函数</h4><p>定义的语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@Builder MyBuilderFunction(){ ... }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用方法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>this.MyBuilderFunction()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="全局自定义构建函数" tabindex="-1"><a class="header-anchor" href="#全局自定义构建函数" aria-hidden="true">#</a> 全局自定义构建函数</h4><p>定义的语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@Builder function MyGlobalBuilderFunction(){ ... }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用方法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>MyGlobalBuilderFunction()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="参数传递参考官网" tabindex="-1"><a class="header-anchor" href="#参数传递参考官网" aria-hidden="true">#</a> 参数传递参考官网</h4>`,20),yn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-builder-0000001524176981-V2#section1771518610353",target:"_blank",rel:"noopener noreferrer"},wn=n("h2",{id:"应用级变量的状态管理-全局存储",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#应用级变量的状态管理-全局存储","aria-hidden":"true"},"#"),s(" 应用级变量的状态管理（全局存储）")],-1),_n={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/arkts-state-management-0000001504151156-V2",target:"_blank",rel:"noopener noreferrer"},xn=p(`<h2 id="常用功能" tabindex="-1"><a class="header-anchor" href="#常用功能" aria-hidden="true">#</a> 常用功能</h2><h3 id="ui组件显示隐藏" tabindex="-1"><a class="header-anchor" href="#ui组件显示隐藏" aria-hidden="true">#</a> UI组件显示隐藏</h3><p>通过一个变量来控制显示和隐藏 （用 if 来做判断）</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct AboutPage <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> isShow<span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isShow<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">// 通过isShow判断是否显示</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;显示/隐藏&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&quot;按钮&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>isShow<span class="token operator">=</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isShow
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环渲染-通常和列表一起使用" tabindex="-1"><a class="header-anchor" href="#循环渲染-通常和列表一起使用" aria-hidden="true">#</a> 循环渲染（通常和列表一起使用）</h3><p>使用ForEach（需要渲染的列表数据，组件生成函数，键值生成函数【key】）</p><p>默认的键值生成函数，即(item: any, index: number) =&gt; { return index + &#39;__&#39; + JSON.stringify(item); },</p><p>所以第三个参数推荐不写。（写了反而可能出现操作错误，操作数据渲染显示异常）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ArkUI框架会对重复的键值发出警告。在UI更新的场景下，如果出现重复的键值，框架可能无法正常工作，具体请参见渲染结果非预期。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct AboutPage <span class="token punctuation">{</span>
  <span class="token keyword">private</span> list<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;一&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;二&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;三&quot;</span><span class="token punctuation">]</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          
        <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">,</span> <span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>            
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>			   <span class="token comment">// 注意这里用的模板字符串，不用会报错(Text 需要是字符串类型)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>   <span class="token comment">// 注意这里用 index 作为key值，需要使用的模板字符串，不用会报错</span>
          
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>循环渲染通常和列表一起使用</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct ListDemo <span class="token punctuation">{</span>
  <span class="token keyword">private</span> arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">{</span> space<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">ListItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">textAlign</span><span class="token punctuation">(</span>TextAlign<span class="token punctuation">.</span>Center<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">borderRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token number">0x007DFF</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> item <span class="token operator">=&gt;</span> item<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token number">0xF1F3F5</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基础组件" tabindex="-1"><a class="header-anchor" href="#基础组件" aria-hidden="true">#</a> 基础组件</h2>`,13),Cn={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/ts-container-alphabet-indexer-0000001427744828-V3",target:"_blank",rel:"noopener noreferrer"},Tn=p(`<p>编辑器中，悬停在组件的代码上，可以查看api参考</p><h3 id="text" tabindex="-1"><a class="header-anchor" href="#text" aria-hidden="true">#</a> Text</h3><p>Text(content?: string | Resource)</p><p>注意：只能是字符串 / Resource 类型， 不能是数字等类型，否则会报错，需要显示数字类型时可以用模板字符串</p><h3 id="textinput-输入框" tabindex="-1"><a class="header-anchor" href="#textinput-输入框" aria-hidden="true">#</a> TextInput 输入框</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct NewPage <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  controller<span class="token operator">:</span> TextInputController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextInputController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token function">TextInput</span><span class="token punctuation">(</span> <span class="token punctuation">{</span>text<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span>placeholder<span class="token operator">:</span><span class="token string">&#39;请输入内容&#39;</span><span class="token punctuation">,</span>controller<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">}</span> <span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">placeholderColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Grey<span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">placeholderFont</span><span class="token punctuation">(</span><span class="token punctuation">{</span> size<span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> weight<span class="token operator">:</span> <span class="token number">400</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">caretColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span>      <span class="token comment">//设置输入框光标颜色。</span>
         <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>                <span class="token comment">// 设置文本的最大输入字符数。</span>
         <span class="token punctuation">.</span><span class="token function">textAlign</span><span class="token punctuation">(</span>TextAlign<span class="token punctuation">.</span>Start<span class="token punctuation">)</span>   <span class="token comment">//    设置输入文本在输入框中的对齐方式。 默认值：TextAlign.Start</span>
         <span class="token punctuation">.</span><span class="token function">inputFilter</span><span class="token punctuation">(</span><span class="token string">&#39;[a-z]&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>      <span class="token comment">// 正则表达式，匹配表达式的输入允许显示</span>
           <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> value
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>InputType<span class="token punctuation">.</span>Password<span class="token punctuation">)</span>    <span class="token comment">// 输入框类型，此处设置密码类型（还有以下类型 Email，Number，PhoneNumber）</span>
         <span class="token punctuation">.</span><span class="token function">showPasswordIcon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token comment">// 密码输入模式时，输入框末尾的图标是否显示。默认值：true</span>
         <span class="token punctuation">.</span><span class="token function">style</span><span class="token punctuation">(</span>TextInputStyle<span class="token punctuation">.</span>Inline<span class="token punctuation">)</span> 


        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;设置光标的位置&#39;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 将光标移动至第2个字符后</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">.</span><span class="token function">caretPosition</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> Image</h3><p>1：string格式可用于加载网络图片和本地图片，常用于加载网络图片。 （加载网络图片需要增加网络权限配置）</p><p>2：PixelMap格式为像素图，常用于图片编辑的场景。（不推荐使用）</p><p>3：Resource格式可以跨包/跨模块访问资源文件，是访问本地图片的推荐方式。</p><p>​ Image($r(&#39;app.media.icon&#39;)) 访问 resources/base/media 目录下的文件 （可以不用带后缀名）</p><p>​ Image($rawfile(&#39;icon.png&#39;)) 访问 resources/rawfile 目录下的文件 （要带后缀名）</p><p>示例：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code> <span class="token function">Image</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span><span class="token punctuation">)</span><span class="token comment">// 直接加载网络地址，请填写一个具体的网络图片地址,增加网络权限</span>
          <span class="token punctuation">.</span><span class="token function">alt</span><span class="token punctuation">(</span><span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.icon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 使用alt，在网络图片加载成功前使用占位图</span>
          <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用网络图片需要添加权限：</p><p>module.json5 增加如下配置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;requestPermissions&quot;: [
      {&quot;name&quot;: &quot;ohos.permission.INTERNET&quot;}
    ],
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="鸿蒙的图标库-可下载svg图标" tabindex="-1"><a class="header-anchor" href="#鸿蒙的图标库-可下载svg图标" aria-hidden="true">#</a> 鸿蒙的图标库（可下载svg图标）</h4>`,18),qn={href:"https://developer.huawei.com/consumer/cn/design/harmonyos-icon/",target:"_blank",rel:"noopener noreferrer"},Sn=n("h3",{id:"video",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#video","aria-hidden":"true"},"#"),s(" Video")],-1),An=n("p",null,"使用网络适配地址时和图片一样需要 INTERNET 权限",-1),In={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/ts-media-components-video-0000001427902484-V2#ZH-CN_TOPIC_0000001573929037__%E7%A4%BA%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"},Nn=n("h3",{id:"tabs-tabcontent",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tabs-tabcontent","aria-hidden":"true"},"#"),s(" Tabs,TabContent")],-1),Pn=n("p",null,"通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图。",-1),En={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/ts-container-tabcontent-0000001478341169-V2",target:"_blank",rel:"noopener noreferrer"},Bn=p(`<h4 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct AboutPage <span class="token punctuation">{</span>
  <span class="token keyword">private</span> controller<span class="token operator">:</span> TabsController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TabsController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">{</span>barPosition<span class="token operator">:</span>BarPosition<span class="token punctuation">.</span>Start<span class="token punctuation">,</span>controller<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">TabContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 在tab内容中显示的内容</span>
            <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Green<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// tab显示的文字内容（string）</span>
          <span class="token punctuation">.</span><span class="token function">tabBar</span><span class="token punctuation">(</span><span class="token string">&#39;greenContent&#39;</span><span class="token punctuation">)</span>

          <span class="token function">TabContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
          <span class="token punctuation">.</span><span class="token function">tabBar</span><span class="token punctuation">(</span><span class="token string">&#39;blueContent&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">.</span><span class="token function">vertical</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">barMode</span><span class="token punctuation">(</span>BarMode<span class="token punctuation">.</span>Scrollable<span class="token punctuation">)</span>  <span class="token comment">// BarMode默认是Fixed，设置成Scrollable时，超过长度TabBar可以滚动</span>
        <span class="token punctuation">.</span><span class="token function">barWidth</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 设置TabBar宽度</span>
        <span class="token punctuation">.</span><span class="token function">barHeight</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span> <span class="token comment">// 设置TabBar高度</span>
        <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 设置Tabs组件宽度</span>
        <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 设置Tabs组件高度</span>
        <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token string">&#39;white&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 设置Tabs组件背景颜色</span>

      <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置tabbar位置和排列方向" tabindex="-1"><a class="header-anchor" href="#设置tabbar位置和排列方向" aria-hidden="true">#</a> 设置TabBar位置和排列方向</h4><p>注意，设置位置后，适量的调整 barWidth，barHeight 的值以达到良好的展示效果</p><p>barPosition的值可以设置为BarPosition.Start（默认值）和BarPosition.End：</p><ul><li><p>BarPosition.Start</p><p>vertical属性方法设置为false（默认值）时，页签位于容器顶部。</p><p>vertical属性方法设置为true时，页签位于容器左侧。</p></li><li><p>BarPosition.End</p><p>vertical属性方法设置为false时，页签位于容器底部。</p><p>vertical属性方法设置为true时，页签位于容器右侧。</p></li></ul><h4 id="自定义tabbar样式" tabindex="-1"><a class="header-anchor" href="#自定义tabbar样式" aria-hidden="true">#</a> 自定义TabBar样式</h4><p>TabContent的tabBar属性除了支持string类型，还支持使用@Builder装饰器修饰的函数。您可以使用@Builder装饰器，构造一个生成自定义TabBar样式的函数，实现自定义TarBar样式</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct AboutPage <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> currentIndex<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> tabsController<span class="token operator">:</span> TabsController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TabsController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 自定义的tabBar展示样式</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Builder</span></span> <span class="token function">TabBuilder</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> targetIndex<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> selectedImg<span class="token operator">:</span> Resource<span class="token punctuation">,</span> normalImg<span class="token operator">:</span> Resource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Image</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">===</span> targetIndex <span class="token operator">?</span> selectedImg <span class="token operator">:</span> normalImg<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">35</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token function">Text</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">===</span> targetIndex <span class="token operator">?</span> <span class="token string">&#39;#1698CE&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;#6B6B6B&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">justifyContent</span><span class="token punctuation">(</span>FlexAlign<span class="token punctuation">.</span>Center<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> targetIndex<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>tabsController<span class="token punctuation">.</span><span class="token function">changeIndex</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Tabs</span><span class="token punctuation">(</span><span class="token punctuation">{</span> barPosition<span class="token operator">:</span> BarPosition<span class="token punctuation">.</span>End<span class="token punctuation">,</span> controller<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tabsController <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">TabContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token string">&#39;#00CB87&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">tabBar</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">TabBuilder</span><span class="token punctuation">(</span><span class="token string">&#39;首页&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.zphChoice&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.zph&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

      <span class="token function">TabContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token string">&#39;#007DFF&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">tabBar</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">TabBuilder</span><span class="token punctuation">(</span><span class="token string">&#39;我的&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.shouyeChoice&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.shouye&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">barWidth</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">barHeight</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-列表-自带滚动" tabindex="-1"><a class="header-anchor" href="#list-列表-自带滚动" aria-hidden="true">#</a> List 列表（自带滚动）</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct NewPage <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  controller<span class="token operator">:</span> TextInputController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextInputController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">private</span> arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;列表标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>

      <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">{</span> space<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">ListItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">textAlign</span><span class="token punctuation">(</span>TextAlign<span class="token punctuation">.</span>Center<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">borderRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token number">0x007DFF</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> item <span class="token operator">=&gt;</span> item<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">listDirection</span><span class="token punctuation">(</span>Axis<span class="token punctuation">.</span>Horizontal<span class="token punctuation">)</span>   <span class="token comment">//设置List组件排列方向。  默认值：Axis.Vertical</span>
      <span class="token punctuation">.</span><span class="token function">layoutWeight</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment">// 分配权重，去除已有的高度值，剩下的高度，按照数值大小分配权重</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token number">0xF1F3F5</span><span class="token punctuation">)</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="重要使用方法" tabindex="-1"><a class="header-anchor" href="#重要使用方法" aria-hidden="true">#</a> 重要使用方法</h4><p>onReachEnd(event: () =&gt; void) 列表到底末尾位置时触发。（可用于分页列表获取下一页数据）</p><h4 id="一个网络获取数据渲染列表的示例" tabindex="-1"><a class="header-anchor" href="#一个网络获取数据渲染列表的示例" aria-hidden="true">#</a> 一个网络获取数据渲染列表的示例：</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getZphList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../api/zph&quot;</span>   <span class="token comment">// 获取列表数据的方法</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct Http <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> list<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> total<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> queryParams<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    pageNum<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    pageSize<span class="token operator">:</span> <span class="token number">10</span>
  <span class="token punctuation">}</span>

  <span class="token function">getThelist</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;获取数据&quot;</span><span class="token punctuation">)</span>
    <span class="token function">getZphList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queryParams<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 请求获取的数据 res.data</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>rows<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finally&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//组件展示前进行数据的一个请求</span>
  <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getThelist</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">,</span> <span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token function">ListItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">Image</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>logoUrl<span class="token punctuation">)</span> <span class="token comment">// 直接加载网络地址，请填写一个具体的网络图片地址,增加网络权限</span>
                      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
                      <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
                    <span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

                  <span class="token punctuation">}</span>
                  <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;95%&quot;</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> bottom<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">justifyContent</span><span class="token punctuation">(</span>FlexAlign<span class="token punctuation">.</span>Center<span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">borderRadius</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">borderWidth</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">borderColor</span><span class="token punctuation">(</span><span class="token string">&quot;#B9B9BB&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>

              <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;100%&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token function">ListItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;——已经到底了——&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span><span class="token string">&quot;#75777A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>

            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">layoutWeight</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">{</span> top<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">onReachEnd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 到底了触发（获取下一页数据）</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">this</span><span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span>pageNum <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span>pageNum <span class="token operator">+</span> <span class="token number">1</span>
              <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getThelist</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;——暂无列表数据——&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span><span class="token string">&quot;#75777A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">alignItems</span><span class="token punctuation">(</span>VerticalAlign<span class="token punctuation">.</span>Top<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swiper-提供子组件滑动轮播显示的能力" tabindex="-1"><a class="header-anchor" href="#swiper-提供子组件滑动轮播显示的能力" aria-hidden="true">#</a> Swiper(提供子组件滑动轮播显示的能力)</h3><p>如下展示了一个简易的短视频划动展示</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyDataSource</span> <span class="token keyword">implements</span> <span class="token class-name">IDataSource</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> list<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">private</span> listener<span class="token operator">:</span> DataChangeListener

  <span class="token function">constructor</span><span class="token punctuation">(</span>list<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> list
  <span class="token punctuation">}</span>

  <span class="token function">totalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>

  <span class="token function">getData</span><span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token function">registerDataChangeListener</span><span class="token punctuation">(</span>listener<span class="token operator">:</span> DataChangeListener<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listener <span class="token operator">=</span> listener
  <span class="token punctuation">}</span>

  <span class="token function">unregisterDataChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct SwiperPage <span class="token punctuation">{</span>
  <span class="token keyword">private</span> swiperController<span class="token operator">:</span> SwiperController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SwiperController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> MyDataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyDataSource</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// list.push(i.toString());</span>
      list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>url<span class="token operator">:</span><span class="token string">&quot;http://1.94.16.149:9000/test/movie.mp4&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// 视频网络地址</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyDataSource</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> space<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Swiper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>swiperController<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">LazyForEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// @ts-ignore</span>
          <span class="token comment">// Text(\`\${item.url.toString()}\`).width(&#39;100%&#39;).height(&#39;100%&#39;).backgroundColor(0xAFEEEE).textAlign(TextAlign.Center).fontSize(30)</span>
          <span class="token function">Video</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token comment">// @ts-ignore</span>
            src<span class="token operator">:</span> <span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.movie&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&quot;100%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">autoPlay</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> item <span class="token operator">=&gt;</span> item<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">cachedCount</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>     <span class="token comment">// 设置预加载子组件个数。</span>
      <span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>           <span class="token comment">// 设置当前在容器中显示的子组件的索引值。  默认值：0</span>
      <span class="token comment">// .autoPlay(true)   // 子组件是否自动播放。</span>
      <span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span>      <span class="token comment">// 使用自动播放时播放的时间</span>
      <span class="token punctuation">.</span><span class="token function">indicator</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>   <span class="token comment">// 是否启用导航点指示器。</span>
      <span class="token comment">// .loop(true)      // 是否开启循环。</span>
      <span class="token comment">// .duration(1000)  // 子组件切换的动画时长，单位为毫秒。</span>
      <span class="token punctuation">.</span><span class="token function">itemSpace</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>         <span class="token comment">// 设置子组件与子组件之间间隙。 默认 0</span>
      <span class="token punctuation">.</span><span class="token function">vertical</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>       <span class="token comment">// 是否为纵向滑动 。  默认值：false</span>
      <span class="token punctuation">.</span><span class="token function">curve</span><span class="token punctuation">(</span>Curve<span class="token punctuation">.</span>Linear<span class="token punctuation">)</span>   <span class="token comment">// 动画曲线</span>
      <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>index<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="弹框" tabindex="-1"><a class="header-anchor" href="#弹框" aria-hidden="true">#</a> 弹框</h3>`,19),Vn={href:"https://developer.huawei.com/consumer/cn/training/course/slightMooc/C101680765314766141",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/3_1_u5f39_u7a97-0000001478181449-V2",target:"_blank",rel:"noopener noreferrer"},Rn=p(`<p>弹窗按照功能可以分为以下两类：</p><ul><li>确认类：例如警告弹窗AlertDialog。</li><li>选择类：包括文本选择弹窗TextPickerDialog 、日期滑动选择弹窗DatePickerDialog、时间滑动选择弹窗TimePickerDialog等。</li></ul><p>此外，如果上述弹窗还不能满足您的需求，或者需要对弹窗的布局和样式进行自定义，您还可以使用自定义弹窗CustomDialog。</p><p>自定义弹框的定义</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Preview</span></span>    <span class="token comment">// 增加 @Preview 可以在预览器看到弹框的内容</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">CustomDialog</span></span>   <span class="token comment">// @CustomDialog 说明是自定义弹框组件</span>
<span class="token keyword">export</span> <span class="token keyword">default</span>  struct  dialogExample<span class="token punctuation">{</span>
  controller<span class="token operator">:</span>CustomDialogController     <span class="token comment">// 弹框控制器，可以触发控制器的方法</span>
  <span class="token comment">// 自定义的方法，可以由调用者触发</span>
  <span class="token function-variable function">cancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  <span class="token function-variable function">confirm</span><span class="token operator">:</span> <span class="token punctuation">(</span>content<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>   <span class="token comment">// 像弹框外触发方法，传值</span>
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// build 里面的都是弹框自定义的内容，根据需要编写</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;弹框中的内容&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
      <span class="token comment">// 自定义的确认，取消按钮</span>
      <span class="token function">Flex</span><span class="token punctuation">(</span><span class="token punctuation">{</span> justifyContent<span class="token operator">:</span> FlexAlign<span class="token punctuation">.</span>SpaceAround <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;取消&#39;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token number">0xffffff</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span>
        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;确认&#39;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;确认内容&quot;</span><span class="token punctuation">)</span>   <span class="token comment">// 触发调用者定义的方法</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token number">0xffffff</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> bottom<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义弹框的调用</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> dialogExample <span class="token keyword">from</span> <span class="token string">&#39;../components/dialogComponent&#39;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct Index <span class="token punctuation">{</span>
    
  <span class="token comment">// 弹框控制器</span>
  dialogController<span class="token operator">:</span>CustomDialogController<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">CustomDialogController</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// builder后面是自定义的弹框</span>
    builder<span class="token operator">:</span><span class="token function">dialogExample</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// 可传入弹框参数 ,如在弹框内部定义的方法，可以在出发后，到这里执行</span>
        cancel<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onCancel<span class="token punctuation">,</span>
        confirm<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAccept<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    alignment<span class="token operator">:</span> DialogAlignment<span class="token punctuation">.</span>Default<span class="token punctuation">,</span>  <span class="token comment">// 可设置dialog的对齐方式，设定显示在底部或中间等，默认为底部显示</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自定义的取消按钮触发&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">onAccept</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自定义的取消按钮触发&#39;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">传回内容是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 打开自定义弹框</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dialogController<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
    
    

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>



</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="web组件" tabindex="-1"><a class="header-anchor" href="#web组件" aria-hidden="true">#</a> Web组件</h3>`,8),Dn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/web-component-overview-0000001508249461-V2",target:"_blank",rel:"noopener noreferrer"},Ln=p(`<p>ArkUI为我们提供了Web组件来加载网页，借助它我们就相当于在自己的应用程序里嵌入一个浏览器，从而非常轻松地展示各种各样的网页。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> web_webview <span class="token keyword">from</span> <span class="token string">&#39;@ohos.web.webview&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct WebComponent <span class="token punctuation">{</span>
  webviewController<span class="token operator">:</span> web_webview<span class="token punctuation">.</span>WebviewController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">web_webview</span><span class="token punctuation">.</span><span class="token function">WebviewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 点击按钮时，通过  webviewController 修改架加载的网页</span>
      <span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;loadUrl&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 点击按钮时，通过loadUrl，跳转到www.example1.com</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>webviewController<span class="token punctuation">.</span><span class="token function">loadUrl</span><span class="token punctuation">(</span><span class="token string">&#39;www.example1.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ErrorCode: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,  Message: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token comment">// 组件创建时，加载  https://www.baidu.com/</span>
      <span class="token function">Web</span><span class="token punctuation">(</span><span class="token punctuation">{</span> src<span class="token operator">:</span> <span class="token string">&#39;https://www.baidu.com/&#39;</span><span class="token punctuation">,</span> controller<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>webviewController<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zoomAccess</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第三方库" tabindex="-1"><a class="header-anchor" href="#第三方库" aria-hidden="true">#</a> 第三方库</h2>`,3),Wn={href:"https://repo.harmonyos.com/#/cn/application/atomService?sort=downloads&page=1",target:"_blank",rel:"noopener noreferrer"},Fn=n("p",null,"下载第三方库显示 ：ohpm : 无法将“ohpm”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。",-1),On=n("p",null,"解决：将ohpm的bin目录位置配置到环境变量里去，终端输入 ohpm -v 能看到版本号则可以正常下载了",-1),Un={id:"标题栏-titlebar",tabindex:"-1"},$n=n("a",{class:"header-anchor",href:"#标题栏-titlebar","aria-hidden":"true"},"#",-1),Hn={href:"https://gitee.com/smarthane/titlebar",target:"_blank",rel:"noopener noreferrer"},zn=p('<h2 id="数据请求" tabindex="-1"><a class="header-anchor" href="#数据请求" aria-hidden="true">#</a> 数据请求</h2><p>使用网络管理模块的相关功能时，需要请求相应的权限。</p><table><thead><tr><th>权限名</th><th>说明</th></tr></thead><tbody><tr><td>ohos.permission.GET_NETWORK_INFO</td><td>获取网络连接信息。</td></tr><tr><td>ohos.permission.SET_NETWORK_INFO</td><td>修改网络连接状态。</td></tr><tr><td>ohos.permission.INTERNET</td><td>允许程序打开网络套接字，进行网络连接。</td></tr></tbody></table><h3 id="原生数据请求" tabindex="-1"><a class="header-anchor" href="#原生数据请求" aria-hidden="true">#</a> 原生数据请求</h3>',4),jn={href:"https://blog.csdn.net/qq_68512683/article/details/134724984",target:"_blank",rel:"noopener noreferrer"},Zn=n("h3",{id:"axios请求",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#axios请求","aria-hidden":"true"},"#"),s(" axios请求")],-1),Gn={href:"https://repo.harmonyos.com/#/cn/application/atomService/@ohos%2Faxios",target:"_blank",rel:"noopener noreferrer"},Jn=p(`<p>ohpm install @ohos/axios</p><p>axios.ts (封装axios请求)</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> AxiosError<span class="token punctuation">,</span> AxiosResponse<span class="token punctuation">,</span> InternalAxiosRequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ohos/axios&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> service<span class="token operator">=</span>axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 配置域名前缀</span>
  baseURL<span class="token operator">:</span><span class="token string">&quot;https://abcdefg/zhq&quot;</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;Channel&quot;</span><span class="token operator">:</span><span class="token string">&quot;B2B&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  method<span class="token operator">:</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 添加请求拦截器</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token operator">:</span>InternalAxiosRequestConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 对请求数据做点什么</span>
  <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>error<span class="token operator">:</span>AxiosError<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 对请求错误做些什么</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 添加响应拦截器</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>response<span class="token operator">:</span>AxiosResponse<span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 对响应数据做点什么</span>
  <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>error<span class="token operator">:</span>AxiosError<span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 对响应错误做点什么</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> service<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对 api 请求接口封装</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> service <span class="token keyword">from</span> <span class="token string">&quot;../utils/axios&quot;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getList</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/abc/list</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>getList<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../api/zph&quot;</span>

<span class="token function">getTheZphList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;获取数据&quot;</span><span class="token punctuation">)</span>
    <span class="token function">getZphList</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">pageNum</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">pageSize</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token operator">=</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>rows      <span class="token comment">// 此处的  res.data 就是接口返回的结果内容。</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finally&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据持久化" tabindex="-1"><a class="header-anchor" href="#数据持久化" aria-hidden="true">#</a> 数据持久化</h2>`,8),Kn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/app-data-persistence-0000001505632753-V2",target:"_blank",rel:"noopener noreferrer"},Qn=p(`<h3 id="首选项" tabindex="-1"><a class="header-anchor" href="#首选项" aria-hidden="true">#</a> 首选项</h3><p>首选项为应用提供Key-Value键值型的数据存储能力，支持应用持久化轻量级数据，并对其进行增删改查等。该存储对象中的数据会被缓存在内存中，因此它可以获得更快的存取速度</p><p>PreferencesUtil 工具类封装 (里面是异步操作)</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> preferences <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.preferences&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">PreferencesUtil</span><span class="token punctuation">{</span>

  prefMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> preferences<span class="token punctuation">.</span>Preferences<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">//  loadPreference 在 ability 的 onCreate 使用，name是 首选项的名字   (name是可选的，视需求来)</span>
  <span class="token keyword">async</span> <span class="token function">loadPreference</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token comment">// 加载preferences</span>
      <span class="token keyword">let</span> pref <span class="token operator">=</span> <span class="token keyword">await</span> preferences<span class="token punctuation">.</span><span class="token function">getPreferences</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> name<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>prefMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> pref<span class="token punctuation">)</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">加载Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]成功</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">加载Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]失败</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
 
  <span class="token keyword">async</span> <span class="token function">putPreferenceValue</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> preferences<span class="token punctuation">.</span>ValueType<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]尚未初始化！</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> pref <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
      <span class="token comment">// 写入数据</span>
      <span class="token keyword">await</span> pref<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
      <span class="token comment">// 刷盘，持久化数据</span>
      <span class="token keyword">await</span> pref<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">保存Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]成功</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">保存Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]失败</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">async</span> <span class="token function">getPreferenceValue</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> preferences<span class="token punctuation">.</span>ValueType<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>prefMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]尚未初始化！</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> pref <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prefMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
      <span class="token comment">// 读数据</span>
      <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> pref<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> defaultValue<span class="token punctuation">)</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">读取Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]成功</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> value
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">读取Preferences[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ]失败</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> preferencesUtil <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PreferencesUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> preferencesUtil <span class="token keyword">as</span> PreferencesUtil
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化：在 EntryAbility 的 onCreate() 获取首选项实例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> PreferenceUtil <span class="token keyword">from</span> <span class="token string">&quot;../utils/preference&quot;</span>

<span class="token keyword">async</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span> launchParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hilog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token number">0x0000</span><span class="token punctuation">,</span> <span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%{public}s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Ability onCreate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 加载 preference , 名字是 “MyPreference”  要是唯一的</span>
    <span class="token keyword">await</span> PreferenceUtil<span class="token punctuation">.</span><span class="token function">loadPreference</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">,</span><span class="token string">&quot;MyPreference&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> PreferenceUtil <span class="token keyword">from</span> <span class="token string">&quot;../utils/preference&quot;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct Index <span class="token punctuation">{</span>
    <span class="token comment">// 设置preferenceData初始值为1</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> preferenceData<span class="token operator">:</span><span class="token builtin">string</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
  <span class="token keyword">async</span> <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// 页面加载时，获取名字是MyPreference，键是 keyName 的值，如果没有，则值初始化为 11   （异步操作）</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>preferenceData<span class="token operator">=</span><span class="token keyword">await</span> PreferenceUtil<span class="token punctuation">.</span><span class="token function">getPreferenceValue</span><span class="token punctuation">(</span><span class="token string">&quot;MyPreference&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;keyName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span>
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>preferenceData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>preferenceData<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>preferenceData<span class="token operator">+</span><span class="token string">&#39;1&#39;</span>
               <span class="token comment">// 更改名字是MyPreference，键是 keyName 的值。</span>
            PreferenceUtil<span class="token punctuation">.</span><span class="token function">putPreferenceValue</span><span class="token punctuation">(</span><span class="token string">&quot;MyPreference&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;keyName&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>preferenceData<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关系型数据库-sqlite-本地存储" tabindex="-1"><a class="header-anchor" href="#关系型数据库-sqlite-本地存储" aria-hidden="true">#</a> 关系型数据库（SQLite，本地存储）</h3><p>关系型数据库是在SQLite基础上实现的<strong>本地数据操作机制</strong>，提供给用户无需编写原生SQL语句就能进行数据增删改查的方法，同时也支持原生SQL语句操作。</p>`,10),Xn={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-data-relationalstore-0000001493744128-V2",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://blog.csdn.net/qq_53270554/article/details/136874974",target:"_blank",rel:"noopener noreferrer"},ns=p(`<h4 id="创建一个操作的表结构类" tabindex="-1"><a class="header-anchor" href="#创建一个操作的表结构类" aria-hidden="true">#</a> 创建一个操作的表结构类</h4><p>对应的任务的字段</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 任务类</span>
<span class="token keyword">export</span> <span class="token keyword">default</span>  <span class="token keyword">class</span> <span class="token class-name">Tasks</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token comment">//任务名称</span>
  name<span class="token operator">:</span> String
  <span class="token comment">//任务状态：是否勾选</span>
  checked<span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="操作关系型数据库的一个封装" tabindex="-1"><a class="header-anchor" href="#操作关系型数据库的一个封装" aria-hidden="true">#</a> 操作关系型数据库的一个封装</h4><p>（对 TASKS 表创建和任务的增删改查方法的封装）， 初始化要在 ability 的 onCreate() 方法触发</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> TasksModel <span class="token keyword">from</span> <span class="token string">&quot;../model/tasksModel&quot;</span>

  <span class="token keyword">async</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span> launchParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hilog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token number">0x0000</span><span class="token punctuation">,</span> <span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%{public}s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Ability onCreate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 初始化任务表</span>
    TasksModel<span class="token punctuation">.</span><span class="token function">initDB</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> relationalStore <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.relationalStore&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 导入模块</span>
<span class="token keyword">import</span> Tasks <span class="token keyword">from</span> <span class="token string">&quot;../model/tasks&quot;</span>   <span class="token comment">// 导入操作模型的类</span>

<span class="token keyword">class</span> <span class="token class-name">TasksModel</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> rdbStore<span class="token operator">:</span>relationalStore<span class="token punctuation">.</span>RdbStore
  <span class="token keyword">private</span> tableName<span class="token operator">:</span><span class="token builtin">string</span><span class="token operator">=</span><span class="token string">&quot;TASKS&quot;</span>      <span class="token comment">// 表的名称（后续操作需要用到）</span>
  <span class="token comment">// 建库建表（在ability中触发初始化）</span>
  <span class="token function">initDB</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token constant">STORE_CONFIG</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;MyTask.db&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 数据库文件名</span>
      securityLevel<span class="token operator">:</span> relationalStore<span class="token punctuation">.</span>SecurityLevel<span class="token punctuation">.</span><span class="token constant">S1</span> <span class="token comment">// 数据库安全级别</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// 建表语句</span>
    <span class="token keyword">const</span> <span class="token constant">SQL_CREATE_TABLE</span> <span class="token operator">=</span> <span class="token string">&#39;CREATE TABLE IF NOT EXISTS TASKS (ID INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT NOT NULL, CHECKED bit)&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 建表Sql语句</span>

    relationalStore<span class="token punctuation">.</span><span class="token function">getRdbStore</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token constant">STORE_CONFIG</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> rdbStore<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed to get RdbStore. Code:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, message:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Succeeded in getting RdbStore.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      rdbStore<span class="token punctuation">.</span><span class="token function">executeSql</span><span class="token punctuation">(</span><span class="token constant">SQL_CREATE_TABLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 执行sql,创建数据表</span>
      <span class="token comment">// 保存 rdbStore,后续可以操作增删改查</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>rdbStore<span class="token operator">=</span>rdbStore

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 获取列表   根据谓词指定的查询条件查找数据。调用query()方法查找数据，返回一个ResultSet结果集。</span>
  <span class="token keyword">async</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 构建查询条件</span>
    <span class="token keyword">let</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rdbStore<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CHECKED&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// 解析查询结果</span>
    <span class="token keyword">let</span> tasks<span class="token operator">:</span>Tasks<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// 遍历封装数据</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span>isAtLastRow<span class="token punctuation">)</span><span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">goToNextRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 指针移动下一行</span>
      <span class="token comment">// 获取数据</span>
      <span class="token keyword">let</span> id<span class="token operator">=</span>result<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> name<span class="token operator">=</span>result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;NAME&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> checked<span class="token operator">=</span>result<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">&#39;CHECKED&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// 封装到数组</span>
      tasks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> checked<span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>checked<span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;查到数据&quot;</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> tasks

  <span class="token punctuation">}</span>
  <span class="token comment">// 新增</span>
  <span class="token function">add</span><span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rdbStore<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tableName<span class="token punctuation">,</span><span class="token punctuation">{</span>name<span class="token punctuation">,</span>checked<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 修改（通过匹配id来修改）</span>
  <span class="token function">update</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>checked<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 要更新的数据</span>
    <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token punctuation">{</span>checked<span class="token punctuation">}</span>
    <span class="token comment">// 构建查询条件</span>
    <span class="token keyword">let</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建表的predicates</span>
    predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 匹配表&#39;TASKS&#39;中&#39;ID&#39;为&#39;id&#39;的字段</span>
    <span class="token comment">//更新数据</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rdbStore<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>predicates<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 删除（根据id匹配删除）</span>
  <span class="token function">del</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 构建查询条件</span>
    <span class="token keyword">let</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建表的predicates</span>
    predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 匹配表&#39;EMPLOYEE&#39;中&#39;NAME&#39;为&#39;Lisa&#39;的字段</span>
    <span class="token comment">//更新数据</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rdbStore<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> taskModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TasksModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> taskModel <span class="token keyword">as</span> TasksModel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="页面通过封装的类实现增删改查操作" tabindex="-1"><a class="header-anchor" href="#页面通过封装的类实现增删改查操作" aria-hidden="true">#</a> 页面通过封装的类实现增删改查操作</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tasks <span class="token keyword">from</span> <span class="token string">&#39;../model/tasks&#39;</span>    <span class="token comment">// 操作的表结构类</span>
<span class="token keyword">import</span> TaskModel <span class="token keyword">from</span> <span class="token string">&#39;../model/TaskModel&#39;</span>    <span class="token comment">// 增删改查的封装工具类</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> taskList<span class="token operator">:</span> Tasks<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">// 获取列表</span>
TasksModel<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>tasks <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>taskList <span class="token operator">=</span> tasks
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 新增</span>
  <span class="token function">addTask</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 新增任务 (只需要传任务名，其余的值已经在 add() 方法配了默认值)</span>
    TasksModel<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>id <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// console.log(&quot;id&quot;,id)   新增回调返回的 id</span>
      TasksModel<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>tasks <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>taskList <span class="token operator">=</span> tasks
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

<span class="token comment">// 删除（ 只需要传入要删除的id即可 ）</span>
 TasksModel<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
         TasksModel<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>tasks <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">this</span><span class="token punctuation">.</span>taskList <span class="token operator">=</span> tasks
           <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 修改 （传入要修改的id，和要修改的内容部分，其他不变的内容不需要传。 根据id去匹配修改项）</span>
TasksModel<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                      TasksModel<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>tasks <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>taskList <span class="token operator">=</span> tasks
                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">taskChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                      <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="notification模块-通知" tabindex="-1"><a class="header-anchor" href="#notification模块-通知" aria-hidden="true">#</a> Notification模块（通知）</h2>`,10),ss={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-notificationmanager-0000001427585056-V2",target:"_blank",rel:"noopener noreferrer"},as=n("p",null,"通知的相关配置在下面的 NotificationRequest 里面查看：",-1),ts={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-inner-notification-notificationrequest-0000001544464105-V2",target:"_blank",rel:"noopener noreferrer"},ps={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-notificationmanager-0000001427585056-V2#ZH-CN_TOPIC_0000001574248861__contenttype",target:"_blank",rel:"noopener noreferrer"},es={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-inner-notification-notificationcontent-0000001493744108-V2",target:"_blank",rel:"noopener noreferrer"},os=p(`<h3 id="消息通知-带图片" tabindex="-1"><a class="header-anchor" href="#消息通知-带图片" aria-hidden="true">#</a> 消息通知（带图片）</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> image <span class="token keyword">from</span> <span class="token string">&#39;@ohos.multimedia.image&#39;</span>
<span class="token keyword">import</span> notificationManage <span class="token keyword">from</span> <span class="token string">&#39;@ohos.notificationManager&#39;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct Notification <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">State</span></span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span>
  <span class="token comment">// 全局任务 id （不同的通知的id应该是唯一的）</span>
  idx<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">100</span>
  <span class="token comment">// pixel图象（有图片的通知的展示图片内容）</span>
  pixel<span class="token operator">:</span> PixelMap

  <span class="token keyword">async</span> <span class="token function">getPixel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//创建PixelMap的图片</span>
    <span class="token comment">// 获取资源管理器</span>
    <span class="token keyword">let</span> rm <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resourceManager<span class="token punctuation">;</span>
    <span class="token comment">// 读取图片</span>
    <span class="token keyword">let</span> file <span class="token operator">=</span> <span class="token keyword">await</span> rm<span class="token punctuation">.</span><span class="token function">getMediaContent</span><span class="token punctuation">(</span><span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.send&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// 创建PixelMap</span>
    image<span class="token punctuation">.</span><span class="token function">createImageSource</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>buffer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createPixelMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pixel <span class="token operator">=</span> value<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>reason <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;testTag&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;加载图片异常&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token punctuation">}</span>
  <span class="token function">aboutToAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPixel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//publish回调</span>
   <span class="token function">publishCallback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;publish failed &quot;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;publish success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">publishNormalNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">// 基本类型通知内容。</span>
    <span class="token comment">//通知Request对象</span>
    <span class="token keyword">let</span> notificationRequest <span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>NotificationRequest<span class="token operator">=</span> <span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>idx<span class="token operator">++</span><span class="token punctuation">,</span>
      content<span class="token operator">:</span> <span class="token punctuation">{</span>
        contentType<span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>ContentType<span class="token punctuation">.</span><span class="token constant">NOTIFICATION_CONTENT_BASIC_TEXT</span><span class="token punctuation">,</span>
        normal<span class="token operator">:</span> <span class="token punctuation">{</span>
          title<span class="token operator">:</span> <span class="token string">&quot;通知标题&quot;</span><span class="token punctuation">,</span>
          text<span class="token operator">:</span> <span class="token string">&quot;通知内容。&quot;</span><span class="token punctuation">,</span>
          additionalText<span class="token operator">:</span> <span class="token string">&quot;通知附加内容，是对通知内容的补充。&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    notificationManage<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>notificationRequest<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>publishCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>
  <span class="token function">publishLongTextNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//长文本类型通知内容。</span>
    <span class="token comment">//通知Request对象</span>
    <span class="token keyword">let</span> notificationRequest <span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>NotificationRequest<span class="token operator">=</span> <span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>idx<span class="token operator">++</span><span class="token punctuation">,</span>
      content<span class="token operator">:</span> <span class="token punctuation">{</span>
        contentType<span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>ContentType<span class="token punctuation">.</span><span class="token constant">NOTIFICATION_CONTENT_LONG_TEXT</span><span class="token punctuation">,</span>
        longText<span class="token operator">:</span> <span class="token punctuation">{</span>
          title<span class="token operator">:</span> <span class="token string">&quot;通知标题&quot;</span><span class="token punctuation">,</span>
          text<span class="token operator">:</span> <span class="token string">&quot;通知内容&quot;</span><span class="token punctuation">,</span>
          additionalText<span class="token operator">:</span> <span class="token string">&quot;通知附加内容，是对通知内容的补充。&quot;</span><span class="token punctuation">,</span>
          longText<span class="token operator">:</span> <span class="token string">&#39;通知中的长文本，通知中的长文本,通知中的长文本，通知中的长文本，通知中的长文本&#39;</span><span class="token punctuation">,</span>
          briefText<span class="token operator">:</span> <span class="token string">&#39;通知概要和总结&#39;</span><span class="token punctuation">,</span>
          expandedTitle<span class="token operator">:</span> <span class="token string">&#39;通知展开时的标题&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    notificationManage<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>notificationRequest<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>publishCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  <span class="token function">publishMultiLineNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//多行文本类型通知。</span>
    <span class="token comment">//通知Request对象</span>
    <span class="token keyword">let</span> notificationRequest <span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>NotificationRequest<span class="token operator">=</span> <span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>idx<span class="token operator">++</span><span class="token punctuation">,</span>
      content<span class="token operator">:</span> <span class="token punctuation">{</span>
        contentType<span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>ContentType<span class="token punctuation">.</span> <span class="token constant">NOTIFICATION_CONTENT_MULTILINE</span><span class="token punctuation">,</span>
        multiLine<span class="token operator">:</span> <span class="token punctuation">{</span>
          title<span class="token operator">:</span> <span class="token string">&#39;通知标题&#39;</span><span class="token punctuation">,</span>
          text<span class="token operator">:</span> <span class="token string">&#39;通知内容详情&#39;</span><span class="token punctuation">,</span>
          additionalText<span class="token operator">:</span> <span class="token string">&#39;通知附加内容&#39;</span><span class="token punctuation">,</span>
          briefText<span class="token operator">:</span> <span class="token string">&#39;通知概要和总结&#39;</span><span class="token punctuation">,</span>
          longTitle<span class="token operator">:</span> <span class="token string">&#39;展开时的标题，我很宽，我很宽，我很宽&#39;</span><span class="token punctuation">,</span>
          lines<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;第一行&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;第二行&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;第三行&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;第四行&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    notificationManage<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>notificationRequest<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>publishCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  <span class="token function">publishPictureNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//长文本类型通知内容。</span>
    <span class="token comment">//通知Request对象</span>
    <span class="token keyword">let</span> notificationRequest <span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>NotificationRequest<span class="token operator">=</span> <span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>idx<span class="token operator">++</span><span class="token punctuation">,</span>
      content<span class="token operator">:</span> <span class="token punctuation">{</span>
        contentType<span class="token operator">:</span> notificationManage<span class="token punctuation">.</span>ContentType<span class="token punctuation">.</span><span class="token constant">NOTIFICATION_CONTENT_PICTURE</span><span class="token punctuation">,</span>
        picture<span class="token operator">:</span> <span class="token punctuation">{</span>
          title<span class="token operator">:</span> <span class="token string">&#39;通知标题&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>idx<span class="token punctuation">,</span>
          text<span class="token operator">:</span> <span class="token string">&#39;通知内容详情&#39;</span><span class="token punctuation">,</span>
          additionalText<span class="token operator">:</span> <span class="token string">&#39;通知附加内容&#39;</span><span class="token punctuation">,</span>
          briefText<span class="token operator">:</span> <span class="token string">&#39;通知概要和总结&#39;</span><span class="token punctuation">,</span>
          expandedTitle<span class="token operator">:</span> <span class="token string">&#39;展开后标题&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>idx<span class="token punctuation">,</span>
          picture<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pixel       <span class="token comment">//  图片需要是 image.PixelMap  类型的，而不是地址。</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    notificationManage<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>notificationRequest<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>publishCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;通知 normal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;90%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token string">&quot;#73D2FF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">publishNormalNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;通知长文本 longText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;90%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token string">&quot;#73D2FF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">publishLongTextNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;通知多行 MultiLine&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;90%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token string">&quot;#73D2FF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">publishMultiLineNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token function">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;通知附有图片 Picture&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span>FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&quot;90%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">backgroundColor</span><span class="token punctuation">(</span><span class="token string">&quot;#73D2FF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">publishPictureNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">alignItems</span><span class="token punctuation">(</span>VerticalAlign<span class="token punctuation">.</span>Top<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="进度条通知-下载进度等" tabindex="-1"><a class="header-anchor" href="#进度条通知-下载进度等" aria-hidden="true">#</a> 进度条通知（下载进度等）</h3>`,3),cs={href:"https://gitee.com/huyi612/harmonyos-lessons/blob/master/entry/src/main/ets/views/notification/DownloadCard.ets",target:"_blank",rel:"noopener noreferrer"},is=n("p",null,"注意：上述参考案例组件下载后 要修改wantInfo 里面的 bundleName 为自己项目的报名，否则点击时会闪退。",-1),ls={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-app-ability-wantagent-0000001493424324-V2#ZH-CN_TOPIC_0000001573928753__%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97",target:"_blank",rel:"noopener noreferrer"},us=n("p",null,"WantAgent模块提供了触发、取消、比较WantAgent实例和获取bundle名称的能力，包括创建WantAgent实例、获取实例的用户ID、获取want信息等。",-1),rs=n("h2",{id:"后台代理提醒",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#后台代理提醒","aria-hidden":"true"},"#"),s(" 后台代理提醒")],-1),ks={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/agent-powered-reminder-0000001663585481-V2",target:"_blank",rel:"noopener noreferrer"},ds=n("p",null,"后台代理提醒业务类型：",-1),vs=n("ul",null,[n("li",null,"倒计时类：基于倒计时的提醒功能，适用于短时的计时提醒业务。"),n("li",null,"日历类：基于日历的提醒功能，适用于较长时间的提醒业务。"),n("li",null,"闹钟类：基于时钟的提醒功能，适用于指定时刻的提醒业务。")],-1),ms={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/js-apis-reminderagentmanager-0000001477981405-V3?catalogVersion=V3",target:"_blank",rel:"noopener noreferrer"},bs=n("strong",null,"提醒定义、创建提醒、取消提醒",-1),hs=p(`<p>使用步骤：</p><p>添加后台代理提醒使用权限。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;requestPermissions&quot;: [
    {
     &quot;name&quot;: &quot;ohos.permission.PUBLISH_AGENT_REMINDER&quot;
    }
  ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function fs(gs,ys){const a=i("ExternalLinkIcon");return o(),c("div",null,[k,n("p",null,[s("官网："),n("a",d,[s("HarmonyOS鸿蒙专区-开源鸿蒙IDE低代码-云开发-华为开发者学堂 (huawei.com)"),t(a)])]),n("p",null,[n("a",v,[s("前端卷鸿蒙？推荐 12 个 yyds 的开源鸿蒙实战项目 (qq.com)"),t(a)])]),n("p",null,[n("a",m,[s("https://harmonyos-next.github.io/interview-handbook-project/guide/index.html"),t(a)])]),n("p",null,[n("a",b,[s("前言 | 《ArkUI实战》"),t(a)])]),h,n("p",null,[n("a",f,[s("黑马程序员HarmonyOS4+NEXT星河版入门到企业级实战教程，一套精通鸿蒙应用开发_哔哩哔哩_bilibili"),t(a)]),s(),n("a",g,[s("安装DevEcoStudio - 配套文档 (feishu.cn)"),t(a)])]),n("p",null,[n("a",y,[s("00-鸿蒙开发环境准备_哔哩哔哩_bilibili 黑马"),t(a)])]),n("p",null,[n("a",w,[s("启动项目到模拟器_哔哩哔哩_bilibili"),t(a)])]),n("p",null,[n("a",_,[s("https://blog.csdn.net/viewinfinitely/category_12522845.html"),t(a)])]),n("p",null,[n("a",x,[s("Mayism123-CSDN博客"),t(a)])]),n("p",null,[s("学习编写的代码地址： "),n("a",C,[s("东方凝洛/harmonyProject - 码云 - 开源中国 (gitee.com)"),t(a)])]),n("p",null,[s("鸿蒙开发学习文档资料 链接："),n("a",T,[s("https://pan.xunlei.com/s/VNmt7B70WUGbGL0SZ5kgYw7hA1?pwd=yptb#"),t(a)]),s(" 提取码：yptb 链接："),n("a",q,[s("https://pan.xunlei.com/s/VNmt7HMNtf_MyZVjtf6GNcaZA1?pwd=wymn#"),t(a)]),s(" 提取码：wymn")]),n("p",null,[s("Next 开发文档 ："),n("a",S,[s("应用开发导读-基础入门 | 华为开发者联盟 (huawei.com)"),t(a)])]),A,n("p",null,[s("网址："),n("a",I,[s("HUAWEI DevEco Studio和SDK下载和升级 | 华为开发者联盟"),t(a)])]),n("p",null,[s("安装教程："),n("a",N,[s("工具简介-DevEco Studio使用指南-工具-HarmonyOS应用开发"),t(a)])]),P,n("p",null,[n("a",E,[s("https://juejin.cn/post/7059308783532507150"),t(a)])]),B,n("p",null,[n("a",V,[s("HarmonyOS应用开发的工程目录结构_鸿蒙目录结构-CSDN博客"),t(a)])]),M,n("p",null,[s("具体使用看 "),n("a",R,[s("应用程序框架-华为开发者学堂 (huawei.com)"),t(a)])]),n("p",null,[D,s("："),n("a",L,[s("Stage模型-UIAbility的启动模式_哔哩哔哩_bilibili"),t(a)]),s(),n("a",W,[s("深入理解HarmonyOS UIAbility：生命周期、WindowStage与启动模式探析"),t(a)])]),n("p",null,[n("a",F,[s("UIAbilityContext-application-接口依赖的元素及定义-Ability框架-ArkTS接口参考-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),O,U,$,H,n("p",null,[n("a",z,[s("AbilityStage组件容器-Stage模型应用组件-Stage模型开发指导-应用模型-开发 | 华为开发者联盟 (huawei.com)"),t(a)])]),j,n("p",null,[s("官网参考："),n("a",Z,[s("https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-routing-0000001503325125-V2"),t(a)])]),n("ul",null,[n("li",null,[s("router.pushUrl()：目标页不会替换当前页，而是压入页面栈。这样可以保留当前页的状态，并且可以通过返回键或者调用"),n("a",G,[s("router.back()"),t(a)]),s("方法返回到当前页。")]),J]),K,n("p",null,[n("a",Q,[s("https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-create-custom-components-0000001473537046-V2"),t(a)])]),X,n("p",null,[s("官方文档："),n("a",Y,[s("https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-page-custom-components-lifecycle-0000001524296665-V2"),t(a)])]),nn,n("ul",null,[n("li",null,[n("a",sn,[s("onPageShow"),t(a)]),s("：页面每次显示时触发一次，包括路由过程、应用进入前台等场景。")]),n("li",null,[n("a",an,[s("onPageHide"),t(a)]),s("：页面每次隐藏时触发一次，包括路由过程、应用进入后台等场景。")]),n("li",null,[n("a",tn,[s("onBackPress"),t(a)]),s("：当用户点击返回按钮时触发。")])]),pn,n("ul",null,[n("li",null,[n("a",en,[s("aboutToAppear"),t(a)]),s("：组件即将出现时回调该接口，具体时机为在创建自定义组件的新实例后，在执行其build()函数之前执行。")]),n("li",null,[n("a",on,[s("aboutToDisappear"),t(a)]),s("：在自定义组件析构销毁之前执行。不允许在aboutToDisappear函数中改变状态变量，特别是@Link变量的修改可能会导致应用程序行为不稳定。")])]),cn,ln,un,n("p",null,[s("当前@Styles仅支持"),n("a",rn,[s("通用属性"),t(a)]),s("和"),n("a",kn,[s("通用事件"),t(a)]),s("。 @Styles方法不支持参数")]),dn,n("p",null,[n("a",vn,[s("https://blog.csdn.net/Viewinfinitely/article/details/134772944"),t(a)])]),mn,n("p",null,[n("a",bn,[s("@Provide装饰器和@Consume装饰器：与后代组件双向同步-管理组件拥有的状态-状态管理-学习ArkTS语言-入门 | 华为开发者联盟 (huawei.com)"),t(a)])]),hn,n("p",null,[n("a",fn,[s("@Observed装饰器和@ObjectLink装饰器：嵌套类对象属性变化-管理组件拥有的状态-状态管理-学习ArkTS语言-入门 | 华为开发者联盟 (huawei.com)"),t(a)])]),gn,n("p",null,[n("a",yn,[s("https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-builder-0000001524176981-V2#section1771518610353"),t(a)])]),wn,n("p",null,[n("a",_n,[s("应用级变量的状态管理-组件参考（基于ArkTS的声明式开发范式）-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),xn,n("p",null,[n("a",Cn,[s("组件参考（基于ArkTS的声明式开发范式）-ArkTS API参考-HarmonyOS应用开发"),t(a)])]),Tn,n("p",null,[n("a",qn,[s("HarmonyOS 主题图标库 | icon素材免费下载 | 华为开发者联盟 (huawei.com)"),t(a)])]),Sn,An,n("p",null,[s("官网示例："),n("a",In,[s("https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/ts-media-components-video-0000001427902484-V2#ZH-CN_TOPIC_0000001573929037__示例"),t(a)])]),Nn,Pn,n("p",null,[s("Tabs 仅可包含子组件 "),n("a",En,[s("TabContent"),t(a)]),s("。")]),Bn,n("p",null,[s("参考："),n("a",Vn,[s("构建更加丰富的页面-华为开发者学堂 (huawei.com)"),t(a)]),s(),n("a",Mn,[s("弹窗-全局UI方法-组件参考（基于ArkTS的声明式开发范式）-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),Rn,n("p",null,[n("a",Dn,[s("Web组件概述-Web-开发 | 华为开发者联盟 (huawei.com)"),t(a)])]),Ln,n("p",null,[n("a",Wn,[s("DevEco Marketplace (harmonyos.com)"),t(a)])]),Fn,On,n("h3",Un,[$n,s(" 标题栏**"),n("a",Hn,[s("TitleBar"),t(a)]),s("**")]),zn,n("p",null,[s("按照文章如下文章可以简单实现："),n("a",jn,[s("鸿蒙 HarmonyOS4.0 Http数据请求封装详解_鸿蒙网络请求封装-CSDN博客"),t(a)])]),Zn,n("p",null,[n("a",Gn,[s("DevEco Marketplace (harmonyos.com)"),t(a)])]),Jn,n("p",null,[n("a",Kn,[s("应用数据持久化-数据管理-开发 | 华为开发者联盟 (huawei.com)"),t(a)])]),Qn,n("p",null,[n("a",Xn,[s("https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-data-relationalstore-0000001493744128-V2"),t(a)])]),n("p",null,[n("a",Yn,[s("【鸿蒙HarmonyOS开发笔记】应用数据持久化之通过关系型数据库实现数据持久化_鸿蒙开发 previewer 下 持久化关系数据库-CSDN博客"),t(a)])]),ns,n("p",null,[s("使用："),n("a",ss,[s("@ohos.notificationManager (NotificationManager模块)-公共事件与通知-ArkTS接口参考-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),as,n("p",null,[s("NotificationRequest：描述通知的请求："),n("a",ts,[s("NotificationRequest-notification-公共事件与通知-ArkTS接口参考-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),n("p",null,[s("ContentType: "),n("a",ps,[s("@ohos.notificationManager (NotificationManager模块)-公共事件与通知-ArkTS接口参考-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),n("p",null,[s("NotificationContent:"),n("a",es,[s("NotificationContent-notification-公共事件与通知-ArkTS接口参考-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),os,n("p",null,[s("参考："),n("a",cs,[s("entry/src/main/ets/views/notification/DownloadCard.ets · huyi612/harmonyos-lessons - 码云 - 开源中国 (gitee.com)"),t(a)])]),is,n("p",null,[n("a",ls,[s("@ohos.app.ability.wantAgent (WantAgent模块)-通用能力的接口(推荐)-Ability框架-ArkTS接口参考-ArkTS API参考 | 华为开发者联盟 (huawei.com)"),t(a)])]),us,rs,n("p",null,[n("a",ks,[s("代理提醒-后台任务（Background Task）管理-开发 | 华为开发者联盟 (huawei.com)"),t(a)])]),ds,vs,n("p",null,[s("后台代理提醒服务通过"),n("a",ms,[s("reminderAgentManager"),t(a)]),s("模块提供"),bs,s("等能力。")]),hs])}const xs=e(r,[["render",fs],["__file","Harmony.html.vue"]]);export{xs as default};
