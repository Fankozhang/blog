import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as l,a as n,b as s,e,f as t,r as c}from"./app.d07e8db8.js";const i={},r=n("h1",{id:"bigscreen",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bigscreen","aria-hidden":"true"},"#"),s(" bigScreen")],-1),u=n("h2",{id:"echarts",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#echarts","aria-hidden":"true"},"#"),s(" echarts")],-1),k={href:"https://blog.csdn.net/luanpeng825485697/category_11735465.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://juejin.cn/post/7236974705025220645?searchId=20240102162705DC1D6A1FA16220EC1E87#heading-10",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/Alfred-Skyblue/v-scale-screen",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"echarts设置主题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#echarts设置主题","aria-hidden":"true"},"#"),s(" echarts设置主题")],-1),b={href:"https://echarts.apache.org/zh/theme-builder.html",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>在主题中复制 js 代码并保存到 js 文件中，引入到需要的页面，如保存到 theme.js（<strong>记住主题名称，如‘vintage’</strong>）（‘dark’主题是内置的，无需引入）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import &quot;../assets/theme&quot;    // 引入js文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用时，获取dom时填入第二个参数（<strong>主题名称，切记不是js文件名称</strong>）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var myChart2 = echarts.init(this.$refs.map2,&#39;vintage&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>随后绘制的图表就会用上设置的主题样式了。</p><h3 id="vue使用echarts渲染地图数据" tabindex="-1"><a class="header-anchor" href="#vue使用echarts渲染地图数据" aria-hidden="true">#</a> vue使用echarts渲染地图数据</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install echarts --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在使用echarts的页面引入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import * as echarts from &#39;echarts&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),g={href:"https://datav.aliyun.com/portal/school/atlas/area_selector#&lat=31.84139930209406&lng=117.33123779296875&zoom=9",target:"_blank",rel:"noopener noreferrer"},y=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import JSON from &#39;../assets/jinan.json&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>methods里编写获取dom元素容器，渲染数据的方法，并在mounted调用</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;div ref=&quot;map&quot; id=&quot;main&quot; style=&quot;width:500x;height:500px&quot;&gt;

mounted(){
    this.drawMap()
  },
  methods:{
    drawMap(){
        var myChart = echarts.init(this.$refs.map) // 拿到一个实例
        // var myChart = echarts.init(document.getElementById(&quot;main&quot;)) //也可以用id获取实例
          echarts.registerMap(&#39;济南市&#39;, JSON, {}) //引入地图文件
          var option = {
            series: [
              {
                type: &#39;map&#39;,
                mapType: &#39;济南市&#39;//地图名称，要和引入地图文件的第一个参数名相同

              }]
          }
          myChart.setOption(option)
          
           // 地图点击每一块区域事件（根据点击事件参数，进行逻辑处理）
          myChart.on(&#39;click&#39;, function (params) {
            console.log(params)
            //逻辑控制
          })
          
           // resize方法监听图表容器的大小并改变图表大小
           //window.onresize = function() {
           // myChart.resize();
           // }
           //  在vue项目中使用时推荐下面的写法，根据屏幕大小缩放（可以把echarts.init的示例存到data中，使用this.mymyChart进行操作）
          // resize方法监听图表容器的大小并改变图表大小
             window.addEventListener(&#39;resize&#39;, () =&gt; {
                myChart.resize()
            })
          
      }

  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于配置series绘制地图，还可以通过配置geo来设置地图，如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var option={
	geo:{
      // type:&quot;map&quot;,
      map:&quot;china&quot;,//使用 registerMap 注册的地图名称
      // 默认设置完地图是固定死的不能拖动
      roam:true,//否开启鼠标缩放和平移漫游。默认不开启。
      zoom :1,//当前视角的缩放比例。越大比例越大
      center:[108.956239,34.268309],
        label:{//地图上显示文字提示信息
        show:true,
        color:&quot;#ff6600&quot;,
        fontSize:10//字体大小
        },
        itemStyle:{//地图区域的多边形 图形样式。
          areaColor:&quot;#f8bf1c&quot;//地图区域的颜色。
        }
     },
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="echarts常用配置" tabindex="-1"><a class="header-anchor" href="#echarts常用配置" aria-hidden="true">#</a> echarts常用配置</h2><h3 id="title用于设置图表标题" tabindex="-1"><a class="header-anchor" href="#title用于设置图表标题" aria-hidden="true">#</a> title用于设置图表标题</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>          <span class="token comment">//false（控制标题的显示与隐藏）</span>
    
    <span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&quot;图表标题&quot;</span><span class="token punctuation">,</span>      <span class="token comment">//主标题文本</span>
    <span class="token literal-property property">link</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>         <span class="token comment">// 主标题文本超链接,默认值true</span>
    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>    <span class="token comment">// 指定窗口打开主标题超链接，支持&#39;self&#39; | &#39;blank&#39;，不指定等同为&#39;blank&#39;新窗口</span>
    <span class="token literal-property property">textStyle</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&#39;#ccc&#39;</span><span class="token punctuation">,</span>     <span class="token comment">//&#39;red&#39;，字体颜色</span>
        <span class="token literal-property property">fontStyle</span><span class="token operator">:</span><span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>     <span class="token comment">//&#39;italic&#39;(倾斜) | &#39;oblique&#39;(倾斜体) ，字体风格</span>
        <span class="token literal-property property">fontWeight</span><span class="token operator">:</span><span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>  <span class="token comment">//&#39;bold&#39;(粗体) | &#39;bolder&#39;(粗体) | &#39;lighter&#39;(正常粗细) ，字体粗细</span>
        <span class="token literal-property property">fontFamily</span><span class="token operator">:</span><span class="token string">&#39;sans-serif&#39;</span><span class="token punctuation">,</span>     <span class="token comment">//&#39;sans-serif&#39; | &#39;serif&#39; | &#39;monospace&#39; | &#39;Arial&#39; |                              //&#39;Courier New&#39; </span>
        <span class="token comment">// &#39;Microsoft YaHei&#39;(微软雅黑) ，文字字体</span>
        <span class="token literal-property property">fontSize</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>     <span class="token comment">//字体大小</span>
        <span class="token literal-property property">lineHeight</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>    <span class="token comment">//字体行高</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
    <span class="token literal-property property">subtext</span><span class="token operator">:</span><span class="token string">&quot;副标题&quot;</span><span class="token punctuation">,</span>       <span class="token comment">//副标题文本</span>
    <span class="token literal-property property">sublink</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 副标题文本超链接</span>
    <span class="token literal-property property">subtarget</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 指定窗口打开副标题超链接，支持&#39;self&#39; | &#39;blank&#39;，不指定等同为&#39;blank&#39;新窗口</span>
    <span class="token literal-property property">subtextStyle</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span>#ccc<span class="token punctuation">,</span>        <span class="token comment">//字体颜色</span>
        <span class="token literal-property property">fontStyle</span><span class="token operator">:</span><span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>       <span class="token comment">//字体风格</span>
        <span class="token literal-property property">fontWeight</span><span class="token operator">:</span><span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>     <span class="token comment">//字体粗细</span>
        <span class="token literal-property property">fontFamily</span><span class="token operator">:</span><span class="token string">&#39;sans-serif&#39;</span><span class="token punctuation">,</span>     <span class="token comment">//文字字体</span>
        <span class="token literal-property property">fontSize</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>     <span class="token comment">//字体大小</span>
        <span class="token literal-property property">lineHeight</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>    <span class="token comment">//字体行高</span>
        <span class="token literal-property property">align</span><span class="token operator">:</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>       <span class="token comment">//&#39;left&#39; | &#39;right&#39; ，文字水平对齐方式</span>
        <span class="token literal-property property">verticalAlign</span><span class="token operator">:</span><span class="token string">&#39;middle&#39;</span><span class="token punctuation">,</span>     <span class="token comment">//&#39;top&#39; | &#39;bottom&#39; ，文字垂直对齐方式</span>
    <span class="token punctuation">}</span>
    
    <span class="token literal-property property">textAlign</span><span class="token operator">:</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>       <span class="token comment">//整体（包括 text 和 subtext）的水平对齐</span>
    <span class="token literal-property property">textVerticalAlign</span><span class="token operator">:</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>       <span class="token comment">//整体（包括 text 和 subtext）的垂直对齐</span>
    <span class="token literal-property property">padding</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>       <span class="token comment">//[5,10] | [ 5,6, 7, 8] ,标题内边距</span>
    <span class="token literal-property property">left</span><span class="token operator">:</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>     <span class="token comment">//&#39;5&#39; | &#39;5%&#39;，title 组件离容器左侧的距离</span>
    <span class="token literal-property property">right</span><span class="token operator">:</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>    <span class="token comment">//&#39;title 组件离容器右侧的距离</span>
    <span class="token literal-property property">top</span><span class="token operator">:</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>      <span class="token comment">//title 组件离容器上侧的距离</span>
    <span class="token literal-property property">bottom</span><span class="token operator">:</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>   <span class="token comment">//title 组件离容器下侧的距离</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 水平安放位置，默认为&#39;left&#39;，可选为：&#39;center&#39; | &#39;left&#39; | &#39;right&#39; |                                 //  {number}（x坐标，单位px）</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">,</span>       <span class="token comment">// 垂直安放位置，默认为top，可选为：&#39;top&#39; | &#39;bottom&#39; | &#39;center&#39; |                                 // {number}（y坐标，单位px）</span>
    
     <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;rgba(0,0,0,0)&#39;</span><span class="token punctuation">,</span> <span class="token comment">//标题背景颜色，默认&#39;rgba(0,0,0,0)&#39;透明</span>
     <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token string">&#39;#ccc&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 标题边框颜色,默认&#39;#ccc&#39;</span>
     <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 标题边框线宽，单位px，默认为0（无边框）</span>
     <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 标题内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距</span>
     <span class="token literal-property property">itemGap</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// 主副标题纵向间隔，单位px，默认为10</span>
     
     <span class="token literal-property property">shadowBlur</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>      <span class="token comment">//图形阴影的模糊大小。该属性配合 shadowColor,shadowOffsetX,                                     //shadowOffsetY一起设置图形的阴影效果。</span>
    <span class="token literal-property property">shadowColor</span><span class="token operator">:</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowOffsetX</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowOffsetY</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),f={href:"https://blog.csdn.net/wulenglinglz/article/details/121124107",target:"_blank",rel:"noopener noreferrer"},_=t(`<h3 id="legend-用于设置图例" tabindex="-1"><a class="header-anchor" href="#legend-用于设置图例" aria-hidden="true">#</a> legend 用于设置图例</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">legend</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 是否显示图例</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;category&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// &#39;plain&#39;：普通图例。缺省就是普通图例; &#39;scroll&#39;：可滚动翻页的图例。当图例数量较多时可以使用</span>
    <span class="token literal-property property">z</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>     <span class="token comment">// 组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖。</span>
    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span>     <span class="token comment">// 距离容器侧边距离</span>
    <span class="token literal-property property">bottom</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span>     <span class="token comment">// 距离容器侧边距离</span>
    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 距离容器侧边距离</span>
    <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 距离容器侧边距离</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 图例组件的宽度。默认自适应</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 图例组件的高度。默认自适应</span>
    <span class="token literal-property property">orient</span><span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 图例列表的布局朝向; horizontal; vertical</span>
    <span class="token literal-property property">align</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 图例标记和文本的对齐。默认自动</span>
    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>     <span class="token comment">// 图例内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距</span>
    <span class="token literal-property property">itemGap</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>     <span class="token comment">// 图例每项之间的间隔。横向布局时为水平间隔，纵向布局时为纵向间隔</span>
    <span class="token literal-property property">itemWidth</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>     <span class="token comment">// 图例标记的图形宽度</span>
    <span class="token literal-property property">itemHeight</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>      <span class="token comment">// 图例标记的图形高度// 使用字符串模板，模板变量为图例名称 {name}</span>
    <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// 使用回调函数</span>
        <span class="token comment">//  return &#39;Legend &#39; + name;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;{title|&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;}\\n{value|&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>objData<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;人}&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">inactiveColor</span><span class="token operator">:</span> <span class="token string">&#39;#ccc&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 图例关闭时的颜色</span>
    <span class="token literal-property property">textStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#FFF&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 文字的颜色</span>
        <span class="token literal-property property">fontStyle</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的风格（&#39;normal&#39;，无样式；&#39;italic&#39;，斜体；&#39;oblique&#39;，倾斜字体） </span>
        <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的粗细（&#39;normal&#39;，无样式；&#39;bold&#39;，加粗；&#39;bolder&#39;，加粗的基础上再加粗；&#39;lighter&#39;，变细；数字定义粗细也可以，取值范围100至700）</span>
        <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体大小</span>
        <span class="token literal-property property">align</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 文字水平对齐方式，默认自动（&#39;left&#39;，&#39;center&#39;，&#39;right&#39;）</span>
        <span class="token literal-property property">verticalAlign</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字垂直对齐方式，默认自动（&#39;top&#39;，&#39;middle&#39;，&#39;bottom&#39;</span>
        <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token string">&#39;50&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 行高 ）</span>
        <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字块背景色，例：&#39;#123234&#39;, &#39;red&#39;, &#39;rgba(0,23,11,0.3)&#39;</span>
    	
        <span class="token comment">// formatter中有title和value属性，可以用 rich 对这两个属性再分别设置样式</span>
         <span class="token literal-property property">rich</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;rgba(0,0,0,.45)&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;rgba(0,0,0,.85)&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;系列1&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 强制设置图形为圆。</span>
        <span class="token literal-property property">textStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#FFF&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 文字的颜色</span>
            <span class="token literal-property property">fontStyle</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的风格（&#39;normal&#39;，无样式；&#39;italic&#39;，斜体；&#39;oblique&#39;，倾斜字体） </span>
            <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的粗细（&#39;normal&#39;，无样式；&#39;bold&#39;，加粗；&#39;bolder&#39;，加粗的基础上再加粗；&#39;lighter&#39;，变细；数字定义粗细也可以，取值范围100至700）</span>
            <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体大小</span>
            <span class="token literal-property property">align</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 文字水平对齐方式，默认自动（&#39;left&#39;，&#39;center&#39;，&#39;right&#39;）</span>
            <span class="token literal-property property">verticalAlign</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字垂直对齐方式，默认自动（&#39;top&#39;，&#39;middle&#39;，&#39;bottom&#39;</span>
            <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token string">&#39;50&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 行高 ）</span>
            <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字块背景色，例：&#39;#123234&#39;, &#39;red&#39;, &#39;rgba(0,23,11,0.3)&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;transparent&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 图例背景色，默认透明</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tooltip-用于鼠标放在元素上的提示框信息展示" tabindex="-1"><a class="header-anchor" href="#tooltip-用于鼠标放在元素上的提示框信息展示" aria-hidden="true">#</a> tooltip 用于鼠标放在元素上的提示框信息展示</h3><p>trigger 是设置触发的条件</p><p>formatter用于置于元素上显示的数据的格式化</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 是否显示提示框组件</span>
    <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;axis&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 触发类型（&#39;item&#39;，数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用；&#39;axis&#39;，坐标轴触发，主要在柱状图，折线图等会使用类目轴的图表中使用；&#39;none&#39;，不触发。）</span>
    <span class="token literal-property property">axisPointer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;cross&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 指示器类型（&#39;line&#39; 直线指示器；&#39;shadow&#39; 阴影指示器；&#39;none&#39; 无指示器；&#39;cross&#39; 十字准星指示器。）</span>
        <span class="token literal-property property">snap</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment">// 坐标轴指示器是否自动吸附到点上。默认自动判断。</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token comment">// label 距离轴的距离</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#FFF&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 文字的颜色</span>
            <span class="token literal-property property">fontStyle</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的风格（&#39;normal&#39;，无样式；&#39;italic&#39;，斜体；&#39;oblique&#39;，倾斜字体） </span>
            <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的粗细（&#39;normal&#39;，无样式；&#39;bold&#39;，加粗；&#39;bolder&#39;，加粗的基础上再加粗；&#39;lighter&#39;，变细；数字定义粗细也可以，取值范围100至700）</span>
            <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体大小</span>
            <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token string">&#39;50&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 行高 </span>
            padding <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">// 内边距，单位px </span>
            backgroundColor <span class="token operator">=</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文本标签的背景颜色</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token comment">// 是否开启动画</span>
        <span class="token literal-property property">animationDuration</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>     <span class="token comment">// 初始动画时长</span>
        <span class="token literal-property property">animationDurationUpdate</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>    <span class="token comment">// 数据更新动画的时长</span>
    <span class="token punctuation">}</span>
    <span class="token literal-property property">showContent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token comment">// 是否显示提示框浮层，默认显示</span>
    <span class="token literal-property property">alwaysShowContent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token comment">// 是否永远显示提示框内容，默认情况下在移出可触发提示框区域后一定时间后隐藏</span>
    <span class="token literal-property property">triggerOn</span><span class="token operator">:</span> <span class="token string">&#39;mousemove|click&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 提示框触发的条件（&#39;mousemove&#39;，鼠标移动时触发；&#39;click&#39;，鼠标点击时触发；&#39;mousemove|click&#39;，同时鼠标移动和点击时触发；&#39;none&#39;，不在 &#39;mousemove&#39; 或 &#39;click&#39; 时触发）</span>
    <span class="token literal-property property">confine</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 是否将 tooltip 框限制在图表的区域内</span>
    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;rgba(50,50,50,0.7)&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 提示框浮层的背景颜色</span>
    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token comment">// 提示框浮层内边距，单位px</span>
    <span class="token literal-property property">textStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#FFF&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 文字的颜色</span>
        <span class="token literal-property property">fontStyle</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的风格（&#39;normal&#39;，无样式；&#39;italic&#39;，斜体；&#39;oblique&#39;，倾斜字体） </span>
        <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体的粗细（&#39;normal&#39;，无样式；&#39;bold&#39;，加粗；&#39;bolder&#39;，加粗的基础上再加粗；&#39;lighter&#39;，变细；数字定义粗细也可以，取值范围100至700）</span>
        <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 文字字体大小</span>
        <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token string">&#39;50&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 行高 </span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        <span class="token keyword">var</span> dotHtml <span class="token operator">=</span> <span class="token string">&#39;&lt;span style=&quot;display:inline-block;margin-right:5px;border-radius:10px;width:30px;height:30px;background-color:#F1E67F&quot;&gt;&lt;/span&gt;&#39;</span>    <span class="token comment">// 定义第一个数据前的圆点颜色</span>
        <span class="token keyword">var</span> dotHtml2 <span class="token operator">=</span> <span class="token string">&#39;&lt;span style=&quot;display:inline-block;margin-right:5px;border-radius:10px;width:30px;height:30px;background-color:#2BA8F1&quot;&gt;&lt;/span&gt;&#39;</span>    <span class="token comment">// 定义第二个数据前的圆点颜色</span>
        result <span class="token operator">+=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>axisValue <span class="token operator">+</span> <span class="token string">&quot;&lt;/br&gt;&quot;</span> <span class="token operator">+</span> dotHtml <span class="token operator">+</span> <span class="token string">&#39; 数据名称 &#39;</span> <span class="token operator">+</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">+</span> <span class="token string">&quot;&lt;/br&gt;&quot;</span> <span class="token operator">+</span> dotHtml2 <span class="token operator">+</span> <span class="token string">&#39; 数据名称 &#39;</span> <span class="token operator">+</span> params<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="grid配置项-图表离容器的距离" tabindex="-1"><a class="header-anchor" href="#grid配置项-图表离容器的距离" aria-hidden="true">#</a> grid配置项：图表离容器的距离</h3><p>show:是否显示直角坐标系网格-----------值:true?false left:图表离容器左侧的距离-----------------值:number?百分比 top:图表离容器顶部的距离-----------------值:number?百分比 right:图表离容器右侧的距离---------------值:number?百分比 bottom:图表离容器底部的距离------------值:number?百分比 backgroundColor:网格背景色-------------值:rgba或#000000 borderColor:网格的边框颜色--------------值:rgba或#000000 borderWidth:网格的边框线宽-------------值:number <strong>备注:背景色-边框-线宽生效前提:设置了show:true，边距不受show影响</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&quot;5%&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token string">&quot;5%&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token string">&quot;5%&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bottom</span><span class="token operator">:</span> <span class="token string">&quot;5%&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&quot;rgba(224, 17, 17, 1)&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token string">&quot;rgba(96, 67, 67, 1)&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 是否显示刻度标签 如果是true 就显示 否则反之</span>
    <span class="token literal-property property">containLabel</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">// 或者用x，y</span>
<span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">&#39;10%&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">x2</span><span class="token operator">:</span> <span class="token string">&#39;50%&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token string">&#39;15%&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">y2</span><span class="token operator">:</span> <span class="token string">&#39;15%&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="toolbox-工具按钮" tabindex="-1"><a class="header-anchor" href="#toolbox-工具按钮" aria-hidden="true">#</a> toolbox：工具按钮</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">toolbox</span><span class="token operator">:</span><span class="token punctuation">{</span>  <span class="token comment">//工具</span>
    <span class="token literal-property property">feature</span><span class="token operator">:</span><span class="token punctuation">{</span>  
        <span class="token literal-property property">saveAsImage</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//导出图片</span>
        <span class="token literal-property property">dataView</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//数据视图</span>
        <span class="token literal-property property">restore</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//重置</span>
        <span class="token literal-property property">dataZoom</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//区域缩放</span>
        <span class="token literal-property property">magicType</span><span class="token operator">:</span><span class="token punctuation">{</span>  <span class="token comment">//切换图表类型</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;line&#39;</span><span class="token punctuation">]</span>  <span class="token comment">//line:折线图</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="series里-类型-位置-数据" tabindex="-1"><a class="header-anchor" href="#series里-类型-位置-数据" aria-hidden="true">#</a> series里 (类型，位置，数据)</h3><ul><li>name 用于设置系列图标的名称</li><li>type 用于设置图表的类型（饼图，柱状图。。。。。。）</li><li>radius <code>Array.&lt;number|string&gt;</code>：数组的第一项是饼图内半径，第二项是外半径</li><li>center 用于设置 图 的位置</li><li>data 用于设置展示的数据，一般是数组。</li><li>label 用于设置图表中 引导线末端的文字的样式</li><li>labelLine 用于设置 引导线 的样式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>         <span class="token literal-property property">series</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;pies&#39;</span>
              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;pie&quot;</span><span class="token punctuation">,</span>
              <span class="token literal-property property">center</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;30%&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;50%&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;50%&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>workData<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token literal-property property">labelLine</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">//  连接到图形的线成度</span>
                <span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span>
                <span class="token comment">//  连接到文字的线长度</span>
                <span class="token literal-property property">length2</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span>
                <span class="token comment">//  控制 引导线的显示于隐藏</span>
                <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// 设置 引导 出来的文字的大小</span>
                font<span class="token operator">-</span>size<span class="token operator">:</span><span class="token number">10</span>
                <span class="token comment">// 设置 引导 出来的文字 是否要显示</span>
                <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token literal-property property">emphasis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">itemStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                  <span class="token literal-property property">shadowBlur</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
                  <span class="token literal-property property">shadowOffsetX</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                  <span class="token literal-property property">shadowColor</span><span class="token operator">:</span> <span class="token string">&quot;rgba(0, 0, 0, 0.5)&quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关于图表开发中遇到的问题和需求" tabindex="-1"><a class="header-anchor" href="#关于图表开发中遇到的问题和需求" aria-hidden="true">#</a> 关于图表开发中遇到的问题和需求</h2><h3 id="关系图中显示了节点-却没有连线" tabindex="-1"><a class="header-anchor" href="#关系图中显示了节点-却没有连线" aria-hidden="true">#</a> 关系图中显示了节点，却没有连线</h3><p>在进行关系匹配时，尽量用 id 来进行匹配，而不是用 name 来进行匹配。因为 name 不具有唯一性，匹配时可能存在问题，导致关系的连线不显示。当数据异常，重复时，控制台还可能会报错。</p><h3 id="x轴文本内容太长的几种解决方案" tabindex="-1"><a class="header-anchor" href="#x轴文本内容太长的几种解决方案" aria-hidden="true">#</a> x轴文本内容太长的几种解决方案</h3>`,18),w={href:"https://www.jianshu.com/p/32416425049a",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"柱形图支持横向-纵向滚动条-鼠标滚动可以平移滚动条",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#柱形图支持横向-纵向滚动条-鼠标滚动可以平移滚动条","aria-hidden":"true"},"#"),s(" 柱形图支持横向/纵向滚动条，鼠标滚动可以平移滚动条")],-1),j={href:"https://www.jianshu.com/p/6ad4eb4da7af",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dataZoom: [
          {
            type: &quot;slider&quot;,
            realtime: true,
            start: 0,
            end: 45, // 初始展示40%
            height: 2,
            fillerColor: &quot;rgba(17, 100, 210, 0.42)&quot;, // 滚动条颜色
            borderColor: &quot;rgba(17, 100, 210, 0.12)&quot;,
            handleSize: 0, // 两边手柄尺寸
            showDetail: false, // 拖拽时是否展示滚动条两侧的文字
            top: &quot;96%&quot; // 滚动条距离顶部高度

            // zoomLock:true, // 是否只平移不缩放
            // moveOnMouseMove:true, //鼠标移动能触发数据窗口平移
            // zoomOnMouseWheel :true, //鼠标移动能触发数据窗口缩放
          },
          {
            type: &quot;inside&quot;, // 支持内部鼠标滚动平移
            start: 0,
            end: 40,
            zoomOnMouseWheel: false, // 关闭滚轮缩放
            moveOnMouseWheel: true, // 开启滚轮平移
            moveOnMouseMove: true // 鼠标移动能触发数据窗口平移
          }
        ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="echarts柱状图柱形修改为三角形" tabindex="-1"><a class="header-anchor" href="#echarts柱状图柱形修改为三角形" aria-hidden="true">#</a> echarts柱状图柱形修改为三角形</h3>`,2),E={href:"https://blog.csdn.net/qq_36652782/article/details/103822830#:~:text=%E6%9F%B1%E7%8A%B6%E5%9B%BE",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"symbol",-1),S=n("code",null,"series",-1),L=n("code",null,"symbol",-1),T=n("code",null,'"triangle"',-1),M=n("h3",{id:"echarts环形图自动轮播选中-中间显示数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#echarts环形图自动轮播选中-中间显示数据","aria-hidden":"true"},"#"),s(" echarts环形图自动轮播选中，中间显示数据")],-1),z={href:"https://blog.csdn.net/weixin_44237806/article/details/117027396",target:"_blank",rel:"noopener noreferrer"},A=n("h2",{id:"可视化大屏开发-图标-及相关资源",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#可视化大屏开发-图标-及相关资源","aria-hidden":"true"},"#"),s(" 可视化大屏开发(图标)及相关资源")],-1),D={href:"http://www.datagear.tech/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/xiaopujun/light-chaser?tab=readme-ov-file",target:"_blank",rel:"noopener noreferrer"},F=n("h2",{id:"参考示例",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考示例","aria-hidden":"true"},"#"),s(" 参考示例：")],-1),R={href:"https://juejin.cn/post/7305434729527181322#heading-8",target:"_blank",rel:"noopener noreferrer"},B=n("h2",{id:"three-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#three-js","aria-hidden":"true"},"#"),s(" Three.js")],-1),G={href:"https://www.bilibili.com/video/BV14r4y1G7h4?p=1",target:"_blank",rel:"noopener noreferrer"},O={href:"http://www.webgl3d.cn/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.three3d.cn/threejs/01-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/01-%E5%89%8D%E7%AB%AF3D%E5%8F%AF%E8%A7%86%E5%8C%96Three.js%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.cpengx.cn/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://threejs.org/docs/index.html#manual/zh/introduction/Creating-a-scene",target:"_blank",rel:"noopener noreferrer"},P={href:"https://discoverthreejs.com/zh/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://blog.csdn.net/qq_44757034/article/details/134499395",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://blog.csdn.net/Potatoyou/article/details/127905256",target:"_blank",rel:"noopener noreferrer"},U={href:"https://blog.csdn.net/weixin_40119412/article/details/104456240",target:"_blank",rel:"noopener noreferrer"},X={href:"https://blog.csdn.net/xi1213/article/details/123244316?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-8-123244316-blog-104456240.235%5Ev39%5Epc_relevant_yljh&spm=1001.2101.3001.4242.5&utm_relevant_index=11",target:"_blank",rel:"noopener noreferrer"},J={href:"https://gitee.com/xi1213/three-load-model",target:"_blank",rel:"noopener noreferrer"},Z=n("h3",{id:"demo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#"),s(" Demo")],-1),$={href:"https://gitee.com/303711888/threejs-park",target:"_blank",rel:"noopener noreferrer"},K={href:"https://blog.csdn.net/Dyz_397/article/details/122751301",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://juejin.cn/post/7209852595002032186#heading-19",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://juejin.cn/post/7293463921729372201",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://codepen.io/Yakudoo/full/YXxmYR",target:"_blank",rel:"noopener noreferrer"},an={href:"https://juejin.cn/post/6844904177345232903#heading-20",target:"_blank",rel:"noopener noreferrer"},en={href:"https://gitee.com/ZHANG_6666/Three.js3D",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://zhang_6666.gitee.io/three.js3d/",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://zhang_6666.gitee.io/three.js3d/",target:"_blank",rel:"noopener noreferrer"},on={href:"https://juejin.cn/post/7252171811554967589#heading-8",target:"_blank",rel:"noopener noreferrer"},ln=t(`<h3 id="实现基础加载模型-代码示例" tabindex="-1"><a class="header-anchor" href="#实现基础加载模型-代码示例" aria-hidden="true">#</a> 实现基础加载模型（代码示例）</h3><p>具体每一项的参数配置可以参考官方文档，进行自定义</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>simple<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>simple<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">THREE</span> <span class="token keyword">from</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> panoramaImg2 <span class="token keyword">from</span> <span class="token string">&quot;@/assets/img/panorama/pImg5.png&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 全景图（背景图）</span>
<span class="token comment">//引入轨道控制器（用来通过鼠标事件控制模型旋转、缩放、移动），没有这个需求可不引入</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 引入gltf模型加载库GLTFLoader.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GLTFLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;three/addons/loaders/GLTFLoader.js&quot;</span><span class="token punctuation">;</span>

    
<span class="token comment">// 获取dom的ref</span>
<span class="token keyword">let</span> simple <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置宽高</span>
<span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span> <span class="token comment">//宽度</span>
<span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span> <span class="token comment">//高度</span>
<span class="token comment">// 创建3D场景对象Scene</span>
<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// AxesHelper：辅助观察的坐标系（红R、绿G、蓝B分别对应坐标系的x、y、z轴，对于three.js的3D坐标系默认y轴朝上。）</span>
<span class="token keyword">const</span> axesHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axesHelper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建渲染器对象</span>
<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">antialias</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">preserveDrawingBuffer</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//保留图形缓冲区</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;查看当前屏幕设备像素比&quot;</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">setPixelRatio</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">setClearColor</span><span class="token punctuation">(</span><span class="token number">0x000000</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置背景颜色并启用透明度</span>
renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置three.js渲染区域的尺寸(像素px)</span>

<span class="token comment">// 创建相机</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> width <span class="token operator">/</span> height<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
camera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//坐标原点</span>

<span class="token comment">// 设置光源</span>
<span class="token keyword">let</span> lightColor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Color</span><span class="token punctuation">(</span><span class="token number">0xffffff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ambient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AmbientLight</span><span class="token punctuation">(</span>lightColor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//环境光</span>
ambient<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;环境光&quot;</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ambient<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> directionalLight1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span>lightColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
directionalLight1<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>directionalLight1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//平行光源添加到场景中</span>
<span class="token keyword">let</span> directionalLight2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span>lightColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
directionalLight2<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>directionalLight2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//平行光源添加到场景中</span>
<span class="token keyword">let</span> directionalLight3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span>lightColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
directionalLight3<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>directionalLight3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//平行光源添加到场景中</span>
<span class="token keyword">let</span> directionalLight4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span>lightColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
directionalLight4<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>directionalLight4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//平行光源添加到场景中</span>
<span class="token keyword">let</span> directionalLight5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span>lightColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
directionalLight5<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>directionalLight5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//平行光源添加到场景中</span>
<span class="token keyword">let</span> directionalLight6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span>lightColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
directionalLight6<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>directionalLight6<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//平行光源添加到场景中</span>

<span class="token comment">//场景球体全景（背景，非必须）</span>
<span class="token keyword">let</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>panoramaImg2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//导入图片</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xffffff</span><span class="token punctuation">,</span>
        <span class="token literal-property property">side</span><span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>BackSide<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
      scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 渲染函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//   mesh.rotateY(0.01); //（执行渲染前操作）这个代码实现每次渲染绕y轴旋转0.01弧度  </span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//请求再次执行渲染函数render，渲染下一帧</span>
<span class="token punctuation">}</span>

<span class="token comment">// 轨道控制器</span>
<span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
controls<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//update()函数内会执行camera.lookAt(controls.targe)</span>
controls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重新渲染</span>
  <span class="token comment">// 浏览器控制台查看相机位置变化</span>
  <span class="token comment">//  console.log(&#39;camera.position&#39;,camera.position);</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token comment">// 加载模型</span>
<span class="token keyword">const</span> <span class="token function-variable function">loadModel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GLTFLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;model/导弹.glb&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;控制台查看加载gltf文件返回的对象结构&quot;</span><span class="token punctuation">,</span> gltf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;gltf对象场景属性&quot;</span><span class="token punctuation">,</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 返回的场景对象gltf.scene插入到threejs场景中</span>
    gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 改变渲染的大小</span>
    <span class="token comment">// 改变模型渲染的位置</span>
    gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 改变模型渲染的旋转角度</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gltf<span class="token punctuation">.</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//执行渲染操作</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
    
<span class="token comment">// 创建一个立方体(网格模型)</span>
<span class="token keyword">const</span> <span class="token function-variable function">getMod</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
     <span class="token comment">//创建一个长方体几何对象Geometry</span>
     <span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// 高光网格材质MeshPhongMaterial 模拟镜面反射，产生一个高光效果</span>
    <span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshPhongMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#23A9F2&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">shininess</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token comment">//高光部分的亮度，默认30</span>
        <span class="token literal-property property">specular</span><span class="token operator">:</span> <span class="token number">0xff0000</span><span class="token punctuation">,</span> <span class="token comment">//高光部分的颜色</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// 两个参数分别为几何体geometry、材质material</span>
     <span class="token keyword">const</span> mesh1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//网格模型对象Mesh</span>
    <span class="token comment">//设置网格模型在三维空间中的位置坐标，默认是坐标原点</span>
    mesh1<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment">// 自定义加载函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">load</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行一次渲染操作(增加了模型加载慢，会先显示背景色（非必要）)</span>
  <span class="token function">loadModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//getMod()   // 加载模型(加载外部模型  和 创建的模型对象) </span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;simple&quot;</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模型的克隆-复制" tabindex="-1"><a class="header-anchor" href="#模型的克隆-复制" aria-hidden="true">#</a> 模型的克隆（复制）</h3><h4 id="普通的克隆" tabindex="-1"><a class="header-anchor" href="#普通的克隆" aria-hidden="true">#</a> 普通的克隆</h4><p>在Three.js中，复制一个模型对象通常意味着创建该对象的一个深拷贝，这样原始对象和新创建的对象在内存中是完全独立的。这可以通过使用<code>.clone()</code>方法来实现，该方法会递归地复制对象及其所有子对象。以下是一个基本的示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 假设你已经有了一个Three.js模型对象，名为 originalModel</span>
<span class="token keyword">const</span> originalModel <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span> <span class="token comment">// 你的模型对象</span>

<span class="token comment">// 使用.clone()方法创建一个深拷贝</span>
<span class="token keyword">const</span> clonedModel <span class="token operator">=</span> originalModel<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 现在 clonedModel 是 originalModel 的一个副本，它们在内存中是独立的</span>
<span class="token comment">// 你可以对 clonedModel 进行操作，而不会影响 originalModel</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，<code>.clone()</code>方法会复制模型的所有属性，包括材质、纹理、几何体等。如果你只想复制模型的几何体（Geometry）而不包括材质，你可以这样做：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 复制几何体</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> originalModel<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建一个新的网格（Mesh）对象，使用复制的几何体</span>
<span class="token keyword">const</span> clonedMesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> originalModel<span class="token punctuation">.</span>material<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 现在 clonedMesh 是一个具有原始几何体和材质的新模型对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，我们首先复制了原始模型的几何体，然后创建了一个新的<code>Mesh</code>对象，它使用复制的几何体和原始模型的材质。这样，新创建的<code>Mesh</code>对象在几何体上与原始模型相同，但在材质和其他属性上是独立的。</p><p>如果你需要复制整个模型，包括其在场景中的位置、旋转和缩放，那么使用<code>.clone()</code>方法是最简单的选择。如果你只想复制模型的某些部分，你可能需要手动创建新的模型对象并设置相应的属性。</p><h4 id="带有骨架的克隆" tabindex="-1"><a class="header-anchor" href="#带有骨架的克隆" aria-hidden="true">#</a> 带有骨架的克隆</h4><p>直接用 clone 方法来克隆带有骨架的模型对象，模型是散架的（例如人物模型），需要使用 骨架工具 的克隆方法才行。</p>`,13),cn={href:"https://threejs.org/docs/#examples/zh/utils/SkeletonUtils",target:"_blank",rel:"noopener noreferrer"},rn=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> SkeletonUtils <span class="token keyword">from</span> <span class="token string">&#39;three/addons/utils/SkeletonUtils.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> model1 <span class="token operator">=</span> SkeletonUtils<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span> gltf<span class="token punctuation">.</span>scene <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gsap动画-模型运动" tabindex="-1"><a class="header-anchor" href="#gsap动画-模型运动" aria-hidden="true">#</a> gsap动画（模型运动）</h3><p>具体的gsap属性可以去查询gsap的相关内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>          <span class="token comment">// gltf.scene 是加载的模型 </span>
          <span class="token keyword">const</span> model1 <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene 

         <span class="token comment">// 使用GSAP添加旋转动画</span>
          gsap<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>model1<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span> <span class="token comment">// 绕X轴旋转360度</span>
            <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0.5</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span> <span class="token comment">// 绕Y轴旋转180度</span>
            <span class="token literal-property property">z</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 绕Z轴不旋转</span>
            <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 动画持续时间</span>
            <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 无限重复</span>
            <span class="token literal-property property">yoyo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 来回旋转</span>
            <span class="token literal-property property">ease</span><span class="token operator">:</span> <span class="token string">&#39;power1.inOut&#39;</span> <span class="token comment">// 使用缓动效果</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// 使用GSAP添加位置移动</span>
          gsap<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>model1<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">z</span><span class="token operator">:</span><span class="token number">40</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token comment">// 使用GSAP添加 大小变化</span>
          gsap<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>model1<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>
            <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>
            <span class="token literal-property property">z</span><span class="token operator">:</span><span class="token number">40</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="问题及解决" tabindex="-1"><a class="header-anchor" href="#问题及解决" aria-hidden="true">#</a> 问题及解决</h3><h4 id="贴图纹理渲染黑色" tabindex="-1"><a class="header-anchor" href="#贴图纹理渲染黑色" aria-hidden="true">#</a> 贴图纹理渲染黑色：</h4>`,6),un={href:"https://blog.csdn.net/qq_52697994/article/details/125613338",target:"_blank",rel:"noopener noreferrer"},kn=t(`<p>需要注意的是加载贴图的方法是一个异步方法，如果没用控制好渲染的时机，会导致渲染时黑色。</p><h4 id="加载gltf模型看不见" tabindex="-1"><a class="header-anchor" href="#加载gltf模型看不见" aria-hidden="true">#</a> 加载gltf模型看不见</h4><p>gltf加载器方法<code>.load()</code>方法也是一个异步方法，注意 renderer.render(scene, camera); //执行渲染操作 要在加载模型后再执行，否则看不见</p><h4 id="下载为图片" tabindex="-1"><a class="header-anchor" href="#下载为图片" aria-hidden="true">#</a> 下载为图片</h4><p>下载canvas图片时，发现并不能看见canvas的模型，使用如下方法解决，在渲染器中加入保留图形缓冲区 的配置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> // 创建渲染器对象

 const renderer = new THREE.WebGLRenderer({

   antialias:true,

   preserveDrawingBuffer: true,//保留图形缓冲区

 });
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="智慧城市开发" tabindex="-1"><a class="header-anchor" href="#智慧城市开发" aria-hidden="true">#</a> 智慧城市开发</h2>`,7),dn={href:"https://space.bilibili.com/690283346",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://www.gbim.vip/#/home/dts-onLine",target:"_blank",rel:"noopener noreferrer"},vn=n("h2",{id:"cesium",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cesium","aria-hidden":"true"},"#"),s(" Cesium")],-1),bn=n("p",null,"Gis 方向",-1);function hn(gn,yn){const a=c("ExternalLinkIcon");return o(),l("div",null,[r,u,n("p",null,[s("对于echarts图表的配置可以参考 "),n("a",k,[s("Echarts数据可视化_腾讯数据架构师的博客-CSDN博客"),e(a)])]),n("p",null,[s("快速搞定可视化大屏:"),n("a",d,[s("https://juejin.cn/post/7236974705025220645?searchId=20240102162705DC1D6A1FA16220EC1E87#heading-10"),e(a)])]),n("p",null,[s("大屏解决方案："),n("a",m,[s("https://github.com/Alfred-Skyblue/v-scale-screen"),e(a)])]),v,n("p",null,[n("a",b,[s("主题编辑器 - Apache ECharts"),e(a)])]),h,n("p",null,[s("引入地图的 json 数据 "),n("a",g,[s("DataV.GeoAtlas地理小工具系列 (aliyun.com)"),e(a)])]),y,n("p",null,[n("a",f,[s("echarts使用之title自定义__echarts设置自定义title"),e(a)])]),_,n("p",null,[n("a",w,[s("Echarts x轴文本内容太长的几种解决方案 - 简书 (jianshu.com)"),e(a)])]),x,n("p",null,[n("a",j,[s("echarts柱形图支持横向/纵向滚动条，鼠标滚动可以平移滚动条 - 简书 (jianshu.com)"),e(a)])]),q,n("p",null,[s("[echarts柱状图柱形修改为三角形_echarts 柱状图变成三角形-CSDN博客]("),n("a",E,[s("https://blog.csdn.net/qq_36652782/article/details/103822830#:~:text=柱状图"),e(a)]),s(" 变成 Echarts 柱状图 的图形 变成三角形 ，可以使用 "),C,s(",的 "),S,s(" 属性中设置 "),L,s(" 为 "),T,s("（ 三角形 ）。)")]),M,n("p",null,[n("a",z,[s("echarts环形图自动轮播选中，中间显示数据，移入停止轮播_echarts环形图自动选中-CSDN博客"),e(a)])]),A,n("p",null,[n("a",D,[s("http://www.datagear.tech/"),e(a)])]),n("p",null,[n("a",H,[s("https://github.com/xiaopujun/light-chaser?tab=readme-ov-file"),e(a)])]),F,n("p",null,[n("a",R,[s("vue3 + ts + svg + ECharts 实现双十一数据大屏 - 掘金 (juejin.cn)"),e(a)])]),B,n("p",null,[s("学习视频："),n("a",G,[s("https://www.bilibili.com/video/BV14r4y1G7h4?p=1"),e(a)])]),n("p",null,[s("学习视频线上文档： "),n("a",O,[s("Three.js中文网 (webgl3d.cn)"),e(a)])]),n("p",null,[n("a",N,[s("老陈打码 | 麒跃科技 (three3d.cn)"),e(a)]),s(),n("a",V,[s("麒跃科技_老陈打码-让学习更简单！ (cpengx.cn)"),e(a)])]),n("p",null,[s("官方文档： "),n("a",W,[s("创建一个场景 – three.js docs (threejs.org)"),e(a)])]),n("p",null,[s("电子书："),n("a",P,[s("《探索three.js》 (discoverthreejs.com)"),e(a)])]),n("p",null,[n("a",I,[s("Vue3集成ThreeJS实现3D效果，threejs+Vite+Vue3+TypeScript 实战课程【一篇文章精通系列】-CSDN博客"),e(a)])]),n("p",null,[n("a",Y,[s("Three.js所有材质的属性及实例应用_meshstandardmaterial_请往我的生活里加满快乐的博客-CSDN博客"),e(a)])]),n("p",null,[s("渲染基础："),n("a",U,[s("Three.js初识:three.js的下载与使用_threejs官网模型选择到下载-CSDN博客"),e(a)])]),n("p",null,[s("导入模型基础："),n("a",X,[s("three.js添加3d模型_threejs加载3d模型-CSDN博客"),e(a)]),s(),n("a",J,[s("three-load-model: three.js加载模型，可切换场景，异步加载3d模型。 (gitee.com)"),e(a)])]),Z,n("p",null,[n("a",$,[s("threejs-park: 基于vue3，threeJS智慧园区 (gitee.com)"),e(a)])]),n("p",null,[n("a",K,[s("Three.js 导入模型demo分析（随笔记）_three.js demo_Dyz_quite的博客-CSDN博客"),e(a)])]),n("p",null,[n("a",Q,[s("# 一篇文章了解 threejs 在 vue 项目中的基本使用 - 掘金 (juejin.cn)"),e(a)])]),n("p",null,[n("a",nn,[s("用Three.js做一个3d版的demo-纯前端（Vue3+Three.js+antvG2） - 掘金 (juejin.cn)"),e(a)])]),n("p",null,[n("a",sn,[s("Chill the lion (codepen.io)"),e(a)])]),n("p",null,[n("a",an,[s("从零开始初尝Three.js【大量案例、简单入手】 - 掘金 (juejin.cn)"),e(a)])]),n("p",null,[n("a",en,[s("threejs3d模型可视化编辑系统: 🔥 🎉基于three.js开发的3D模型可视化编辑系统 包含模型加载，模型文件导入导出，模型背景图，全景图，模型动画，模型灯光，模型定位，辅助线，模型辉光，模型拖拽，模型拆解， 模型材质等可视化操作编辑系统，支持模型编辑数据保存和预览 (gitee.com)"),e(a)])]),n("p",null,[n("a",tn,[s("3D模型可视化编辑器 (gitee.io)"),e(a)])]),n("p",null,[s("模型下载："),n("a",pn,[s("3D模型可视化编辑器 (gitee.io)"),e(a)]),s(" fankoz 密码fanko202...")]),n("p",null,[n("a",on,[s("vue中，整合AntV + DataV实现可视化大屏 - 掘金 (juejin.cn)"),e(a)])]),ln,n("p",null,[n("a",cn,[s("SkeletonUtils – three.js docs (threejs.org)"),e(a)])]),rn,n("p",null,[n("a",un,[s("Three.js 解决纹理渲染后模型为黑色_three.js 地球添加图片后全黑-CSDN博客"),e(a)])]),kn,n("p",null,[s("up主："),n("a",dn,[s("https://space.bilibili.com/690283346"),e(a)]),s(" 太极开发者平台（配置要求高）： "),n("a",mn,[s("https://www.gbim.vip/#/home/dts-onLine"),e(a)])]),vn,bn])}const wn=p(i,[["render",hn],["__file","bigScreen.html.vue"]]);export{wn as default};
