import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as o,a as n,b as s,e as t,f as e,r as c}from"./app.afc88ad2.js";const r={},d=e(`<h1 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> css</h1><h2 id="文字溢出省略号" tabindex="-1"><a class="header-anchor" href="#文字溢出省略号" aria-hidden="true">#</a> <strong>文字溢出省略号</strong></h2><p>文字单行溢出:</p><p><code>overflow: hidden; // 溢出隐藏</code><br><code>text-overflow: ellipsis; // 溢出用省略号显示</code><br><code>white-space: nowrap; // 规定段落中的文本不进行换行</code></p><p>多行文字溢出:</p><p><code>overflow: hidden; // 溢出隐藏 </code><br><code>text-overflow: ellipsis; // 溢出用省略号显示 </code><br><code>display:-webkit-box; // 作为弹性伸缩盒子模型显示。 </code><br><code>-webkit-box-orient:vertical; // 设置伸缩盒子的子元素排列方式：从上到下垂直排列 </code><br><code>-webkit-line-clamp:3; // 显示的行数 </code></p><h2 id="css变量" tabindex="-1"><a class="header-anchor" href="#css变量" aria-hidden="true">#</a> <strong>css变量</strong></h2><p><strong>CSS变量</strong>又称<strong>CSS自定义属性</strong>，通过在<code>css</code>中自定义属性<code>--var</code>与函数<code>var()</code>组成，<code>var()</code>用于引用自定义属性。谈到为何会在<code>CSS</code>中使用变量，以下使用一个示例讲述。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">:</span>root <span class="token punctuation">{</span>
 <span class="token operator">--</span>c<span class="token operator">-</span>color<span class="token operator">:</span> orange<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>title <span class="token punctuation">{</span>
 background<span class="token operator">-</span>color<span class="token operator">:</span> <span class="token keyword">var</span><span class="token punctuation">(</span><span class="token operator">--</span>c<span class="token operator">-</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="渐变" tabindex="-1"><a class="header-anchor" href="#渐变" aria-hidden="true">#</a> <strong>渐变</strong></h2><p>渐变分为<code>线性渐变</code>、 径向渐变 ，在使用线性渐变的时候，使用<code>角度</code>以及<code>百分比</code>去控制渐变，会更加的灵活</p><h3 id="线性渐变使用方式" tabindex="-1"><a class="header-anchor" href="#线性渐变使用方式" aria-hidden="true">#</a> 线性渐变使用方式:</h3><p>background: linear-gradient（）用于设置线性渐变 <strong>（Linear Gradients）- 向下/向上/向左/向右/对角方向</strong></p><p>括号内容（方向，颜色1，颜色2，颜色3......）</p><p>方向可以是 to left, to right, to bottom right 等，也可以是角度 0deg, 90deg等。</p><p>颜色可以设置多个，支持设置透明度。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//渐变(方向)
background: linear-gradient(to right, rgba(255, 255, 255, 0),#3FB6F7,rgba(255,255,255,0));

//渐变(角度)
background: linear-gradient(88deg, #4DF7BF 0%, rgba(77, 247, 191, 0.26) 12%, rgba(77, 247, 191, 0) 100%);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>边框渐变:</p><p><code>border</code>有个<code>border-image</code>的属性，类似<code>background</code>也有个<code>background-image</code>一样,通过为其设置渐变颜色后，实现的渐变，后面的数字<code>4</code>为<code>x</code>方向偏移量</p><p>使用方式:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.border-grident{
  margin-top: 20px;
  width: 200px;
  height: 200px;
  border: 4px solid;
  border-image: linear-gradient(to right, #8f41e9, #578aef) 4;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="径向渐变使用方式" tabindex="-1"><a class="header-anchor" href="#径向渐变使用方式" aria-hidden="true">#</a> 径向渐变使用方式</h3><p>background-image: radial-gradient() 用于设置径向渐变 <strong>（Radial Gradients）- 由它们的中心定义</strong></p><p>括号内容（shape size at position, start-color, ..., last-color）</p><p>background-image: radial-gradient(red 5%, yellow 15%, green 60%);</p><p>颜色后加上百分比 颜色节点不均匀分布</p><p>shape设置形状</p><p>background-image: radial-gradient(circle, red, yellow, green);</p><p>形状设置的circle,呈圆形渐变</p><p>size 参数定义了渐变的大小。它可以是以下四个值：</p><ul><li><strong>closest-side</strong></li><li><strong>farthest-side</strong></li><li><strong>closest-corner</strong></li><li><strong>farthest-corner</strong></li></ul><p>at position设置中心位置</p><p>background-image: radial-gradient(closest-side at 50% 50%, red, yellow, black);</p><h2 id="css3-2d-转换" tabindex="-1"><a class="header-anchor" href="#css3-2d-转换" aria-hidden="true">#</a> css3 2D 转换</h2><p>transform</p><h4 id="translate-方法-用于平面移动位置" tabindex="-1"><a class="header-anchor" href="#translate-方法-用于平面移动位置" aria-hidden="true">#</a> translate() 方法 用于平面移动位置</h4><p>transform: translate(50px,100px); 根据左(X轴)和顶部(Y轴)位置给定的参数，从当前元素位置移动。</p><p>其中50px是距离左边的大小，100px是距离右边的大小，（只有两个参数）</p><h4 id="rotate-方法-用于平面旋转" tabindex="-1"><a class="header-anchor" href="#rotate-方法-用于平面旋转" aria-hidden="true">#</a> rotate() 方法 用于平面旋转</h4><p>transform: rotate(30deg); 在一个给定度数顺时针旋转的元素。负值是允许的，这样是元素逆时针旋转。</p><p>30deg是旋转的角度（只有一个参数）</p><h4 id="scale-方法-用于元素放大或缩小" tabindex="-1"><a class="header-anchor" href="#scale-方法-用于元素放大或缩小" aria-hidden="true">#</a> scale() 方法 用于元素放大或缩小</h4><p>transform: scale(2,3); /* 标准语法 */ 增加或减少的大小，取决于宽度（X轴）和高度（Y轴）的参数：</p><p>其中的2代表的是横向变化的倍数，3代表纵向变化的倍数</p><h4 id="skew-方法-用于元素的倾斜" tabindex="-1"><a class="header-anchor" href="#skew-方法-用于元素的倾斜" aria-hidden="true">#</a> skew() 方法 用于元素的倾斜</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>transform:skew(&lt;angle&gt; [,&lt;angle&gt;]);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>包含两个参数值，分别表示X轴和Y轴倾斜的角度，如果第二个参数为空，则默认为0，参数为负表示向相反方向倾斜。</p><p>1 skewX();表示只在X轴(水平方向)倾斜。</p><p>2 skewY();表示只在Y轴(垂直方向)倾斜。</p><p>transform: skew(30deg,20deg); 元素在 <strong>X</strong> 轴和 <strong>Y</strong> 轴上倾斜 20 度 30 度。</p><h4 id="matrix-方法-2d变换方法合并成一个" tabindex="-1"><a class="header-anchor" href="#matrix-方法-2d变换方法合并成一个" aria-hidden="true">#</a> matrix() 方法 2D变换方法合并成一个</h4><p>有六个参数，包含旋转，缩放，移动（平移）和倾斜功能。</p><p>transform:matrix(0.866,0.5,-0.5,0.866,0,0);</p><h2 id="css-3d-转换" tabindex="-1"><a class="header-anchor" href="#css-3d-转换" aria-hidden="true">#</a> css 3D 转换</h2><h4 id="rotatex-围绕其在一个给定度数x轴旋转的元素。" tabindex="-1"><a class="header-anchor" href="#rotatex-围绕其在一个给定度数x轴旋转的元素。" aria-hidden="true">#</a> rotateX() 围绕其在一个给定度数X轴旋转的元素。</h4><p>transform: rotateX(120deg); 沿着x轴转动120度</p><h4 id="rotatey-围绕其在一个给定度数y轴旋转的元素。" tabindex="-1"><a class="header-anchor" href="#rotatey-围绕其在一个给定度数y轴旋转的元素。" aria-hidden="true">#</a> rotateY() 围绕其在一个给定度数Y轴旋转的元素。</h4><p>transform: rotateY(120deg); 沿着y轴转动120度</p><h2 id="css3-过渡" tabindex="-1"><a class="header-anchor" href="#css3-过渡" aria-hidden="true">#</a> css3 过渡</h2>`,59),p={href:"https://www.runoob.com/cssref/css3-pr-transition.html",target:"_blank",rel:"noopener noreferrer"},u=n("th",null,"简写属性，用于在一个属性中设置四个过渡属性。",-1),v=n("th",null,"3",-1),m={href:"https://www.runoob.com/cssref/css3-pr-transition-property.html",target:"_blank",rel:"noopener noreferrer"},h=n("td",null,"规定应用过渡的 CSS 属性的名称。",-1),g=n("td",null,"3",-1),b={href:"https://www.runoob.com/cssref/css3-pr-transition-duration.html",target:"_blank",rel:"noopener noreferrer"},k=n("td",null,"定义过渡效果花费的时间。默认是 0。",-1),f=n("td",null,"3",-1),x={href:"https://www.runoob.com/cssref/css3-pr-transition-timing-function.html",target:"_blank",rel:"noopener noreferrer"},_=n("td",null,'规定过渡效果的时间曲线。默认是 "ease"。',-1),y=n("td",null,"3",-1),w={href:"https://www.runoob.com/cssref/css3-pr-transition-delay.html",target:"_blank",rel:"noopener noreferrer"},q=n("td",null,"规定过渡效果何时开始。默认是 0。",-1),z=n("td",null,"3",-1),S=e('<blockquote><p>transition-property: width;</p><p>transition-duration: 1s;</p><p>transition-timing-function: linear;</p><p>transition-delay: 2s;</p></blockquote><p>等效于</p><blockquote><p>transition: width 1s linear 2s;</p></blockquote><p>transition-timing-function的可取值如下表所示</p><table><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">linear</td><td style="text-align:left;">规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。</td></tr><tr><td style="text-align:left;">ease</td><td style="text-align:left;">规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。</td></tr><tr><td style="text-align:left;">ease-in</td><td style="text-align:left;">规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。</td></tr><tr><td style="text-align:left;">ease-out</td><td style="text-align:left;">规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。</td></tr><tr><td style="text-align:left;">ease-in-out</td><td style="text-align:left;">规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。</td></tr><tr><td style="text-align:left;">cubic-bezier(<em>n</em>,<em>n</em>,<em>n</em>,<em>n</em>)</td><td style="text-align:left;">在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值。</td></tr></tbody></table><h2 id="css3-动画" tabindex="-1"><a class="header-anchor" href="#css3-动画" aria-hidden="true">#</a> CSS3 动画</h2>',6),j=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"描述"),n("th",{style:{"text-align":"left"}},"CSS")])],-1),C={style:{"text-align":"left"}},Y={href:"https://www.runoob.com/cssref/css3-pr-animation-keyframes.html",target:"_blank",rel:"noopener noreferrer"},X=n("td",{style:{"text-align":"left"}},"规定动画。",-1),B=n("td",{style:{"text-align":"left"}},"3",-1),N={style:{"text-align":"left"}},V={href:"https://www.runoob.com/cssref/css3-pr-animation.html",target:"_blank",rel:"noopener noreferrer"},D=n("td",{style:{"text-align":"left"}},"所有动画属性的简写属性。",-1),F=n("td",{style:{"text-align":"left"}},"3",-1),E={style:{"text-align":"left"}},L={href:"https://www.runoob.com/cssref/css3-pr-animation-name.html",target:"_blank",rel:"noopener noreferrer"},T=n("td",{style:{"text-align":"left"}},"规定 @keyframes 动画的名称。",-1),U=n("td",{style:{"text-align":"left"}},"3",-1),A={style:{"text-align":"left"}},G={href:"https://www.runoob.com/cssref/css3-pr-animation-duration.html",target:"_blank",rel:"noopener noreferrer"},H=n("td",{style:{"text-align":"left"}},"规定动画完成一个周期所花费的秒或毫秒。默认是 0。",-1),I=n("td",{style:{"text-align":"left"}},"3",-1),$={style:{"text-align":"left"}},P={href:"https://www.runoob.com/cssref/css3-pr-animation-timing-function.html",target:"_blank",rel:"noopener noreferrer"},R=n("td",{style:{"text-align":"left"}},'规定动画的速度曲线。默认是 "ease"。',-1),J=n("td",{style:{"text-align":"left"}},"3",-1),K={style:{"text-align":"left"}},M={href:"https://www.runoob.com/cssref/css3-pr-animation-fill-mode.html",target:"_blank",rel:"noopener noreferrer"},O=n("td",{style:{"text-align":"left"}},"规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式。",-1),Q=n("td",{style:{"text-align":"left"}},"3",-1),W={style:{"text-align":"left"}},Z={href:"https://www.runoob.com/cssref/css3-pr-animation-delay.html",target:"_blank",rel:"noopener noreferrer"},nn=n("td",{style:{"text-align":"left"}},"规定动画何时开始。默认是 0。",-1),sn=n("td",{style:{"text-align":"left"}},"3",-1),an={style:{"text-align":"left"}},tn={href:"https://www.runoob.com/cssref/css3-pr-animation-iteration-count.html",target:"_blank",rel:"noopener noreferrer"},en=n("td",{style:{"text-align":"left"}},"规定动画被播放的次数。默认是 1。",-1),ln=n("td",{style:{"text-align":"left"}},"3",-1),on={style:{"text-align":"left"}},cn={href:"https://www.runoob.com/cssref/css3-pr-animation-direction.html",target:"_blank",rel:"noopener noreferrer"},rn=n("td",{style:{"text-align":"left"}},'规定动画是否在下一周期逆向地播放。默认是 "normal"。',-1),dn=n("td",{style:{"text-align":"left"}},"3",-1),pn={style:{"text-align":"left"}},un={href:"https://www.runoob.com/cssref/css3-pr-animation-play-state.html",target:"_blank",rel:"noopener noreferrer"},vn=n("td",{style:{"text-align":"left"}},'规定动画是否正在运行或暂停。默认是 "running"。',-1),mn=n("td",{style:{"text-align":"left"}},"3",-1),hn=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 以下是最通常的用法

div{
    animation: myName 5s;
    //  myName 指的是@keyframes后面的名字   5s指的是动画持续的事件
}

@keyframes myfirst
{
    from {background: red;}    // 从什么样式开始
    to {background: yellow;}   //  到什么样式结束
}
@keyframes myfirst
{
    0% {background: red;}    
    25% {background: yellow;} 
    50% {background: yellow;}  
    75% {background: yellow;}  
    100% {background: yellow;}  
    //  用百分比表示动画运行到百分比时间时的样式
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>animation-timing-function:linear;</p><p>animation-timing-function使用的数学函数，称为三次贝塞尔曲线，速度曲线。使用此函数，您可以使用您自己的值，或使用预先定义的值之一：</p>`,3),gn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}}),n("th",{style:{"text-align":"left"}}),n("th",{style:{"text-align":"left"}})])],-1),bn=n("tr",null,[n("td",{style:{"text-align":"left"}},"值"),n("td",{style:{"text-align":"left"}},"描述"),n("td",{style:{"text-align":"left"}},"测试")],-1),kn=n("td",{style:{"text-align":"left"}},"linear",-1),fn=n("td",{style:{"text-align":"left"}},"动画从头到尾的速度是相同的。",-1),xn={style:{"text-align":"left"}},_n={href:"https://www.runoob.com/try/playit.php?f=animation-timing-function&preval=linear",target:"_blank",rel:"noopener noreferrer"},yn=n("td",{style:{"text-align":"left"}},"ease",-1),wn=n("td",{style:{"text-align":"left"}},"默认。动画以低速开始，然后加快，在结束前变慢。",-1),qn={style:{"text-align":"left"}},zn={href:"https://www.runoob.com/try/playit.php?f=animation-timing-function&preval=ease",target:"_blank",rel:"noopener noreferrer"},Sn=n("td",{style:{"text-align":"left"}},"ease-in",-1),jn=n("td",{style:{"text-align":"left"}},"动画以低速开始。",-1),Cn={style:{"text-align":"left"}},Yn={href:"https://www.runoob.com/try/playit.php?f=animation-timing-function&preval=ease-in",target:"_blank",rel:"noopener noreferrer"},Xn=n("td",{style:{"text-align":"left"}},"ease-out",-1),Bn=n("td",{style:{"text-align":"left"}},"动画以低速结束。",-1),Nn={style:{"text-align":"left"}},Vn={href:"https://www.runoob.com/try/playit.php?f=animation-timing-function&preval=ease-out",target:"_blank",rel:"noopener noreferrer"},Dn=n("td",{style:{"text-align":"left"}},"ease-in-out",-1),Fn=n("td",{style:{"text-align":"left"}},"动画以低速开始和结束。",-1),En={style:{"text-align":"left"}},Ln={href:"https://www.runoob.com/try/playit.php?f=animation-timing-function&preval=ease-in-out",target:"_blank",rel:"noopener noreferrer"},Tn=n("tr",null,[n("td",{style:{"text-align":"left"}},"steps(int,start|end)"),n("td",{style:{"text-align":"left"}},"指定了时间函数中的间隔数量（步长）。有两个参数，第一个参数指定函数的间隔数，该参数是一个正整数（大于 0）。 第二个参数是可选的，表示动画是从时间段的开头连续还是末尾连续。含义分别如下：start：表示直接开始。end：默认值，表示戛然而止。"),n("td",{style:{"text-align":"left"}})],-1),Un=n("tr",null,[n("td",{style:{"text-align":"left"}},[s("cubic-bezier("),n("em",null,"n"),s(","),n("em",null,"n"),s(","),n("em",null,"n"),s(","),n("em",null,"n"),s(")")]),n("td",{style:{"text-align":"left"}},"在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。"),n("td",{style:{"text-align":"left"}})],-1),An=e(`<h2 id="background-size-cover和contain以及100" tabindex="-1"><a class="header-anchor" href="#background-size-cover和contain以及100" aria-hidden="true">#</a> background-size：cover和contain以及100%**</h2><p><code>contain</code>:<strong>图片放大至满足背景区域的最小边即止</strong>，当背景区域与背景图片的宽高比不一致的情况下，<strong>背景区域可能会长边下有空白覆盖不全</strong>。<code>cover</code>:<strong>图片放大至能满足最大变时为止</strong>，当背景区域与背景图片的宽高比不一致时，<strong>背景图片会在短边下有裁切，显示不全</strong>。</p><p><code>百分比</code>:可以设置两个值</p><ul><li><p>第一个设置宽度，第二个设置高度</p></li><li><p>如果只设置了一个值，那么第二个值默认会被设置为<code>auto</code></p></li></ul><h2 id="elementui样式修改的方式" tabindex="-1"><a class="header-anchor" href="#elementui样式修改的方式" aria-hidden="true">#</a> <strong>elementui样式修改的方式:</strong></h2><h4 id="样式穿透" tabindex="-1"><a class="header-anchor" href="#样式穿透" aria-hidden="true">#</a> 样式穿透</h4><p><code>vue</code>项目中，在修改<code>elementui</code>的样式时通常使用样式穿透，<code>style</code>使用<code>css</code>的预处理器(<code>less</code>, <code>sass</code>, <code>scss</code>)等， 即</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;style lang=&quot;less&quot; scoped&gt;
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>主要的样式穿透如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1. &gt;&gt;&gt;
适用与 css、stylus，不太推荐，可能会有问题
外层类 &gt;&gt;&gt; 想要修改类名 {
修改样式
}

2. /deep/
适用于 scss、less
外层类 /deep/ 想要修改类名 {
修改样式
}

3. ::v-deep
通用，据说可以加快编译速度
::deep 想要修改类名 {
修改样式
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用样式穿透还是无效" tabindex="-1"><a class="header-anchor" href="#使用样式穿透还是无效" aria-hidden="true">#</a> 使用样式穿透还是无效</h4><p>有时会发现使用了以上方法修改 element 组件样式还是会不生效，对于这种情况可以重写一个style标签，在style标签里对需要穿透的样式进行修改</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;style lang=&quot;less&quot; scoped&gt;
&lt;/style&gt;
&lt;style lang=&quot;less&quot;&gt;
   // 对于组件年内样式穿透不生效的，去掉scoped
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css-改变网页的滚动条样式" tabindex="-1"><a class="header-anchor" href="#css-改变网页的滚动条样式" aria-hidden="true">#</a> css 改变网页的滚动条样式</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/
::-webkit-scrollbar {
  background-color: #f5f5f5;
  width: 5px;
}
/*定义滚动条轨道 内阴影+圆角*/
::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px 6px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  background-color: #f5f5f5;
}
/*定义滑块 内阴影+圆角*/
::-webkit-scrollbar-thumb {
  border-radius: 10px;
  -webkit-box-shadow: inset 0 0 6px 6px rgba(0, 0, 0, 0.3);
  background-color: #ddd;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue项目引入animate-css" tabindex="-1"><a class="header-anchor" href="#vue项目引入animate-css" aria-hidden="true">#</a> vue项目引入animate.css</h2>`,16),Gn={href:"https://animate.style/",target:"_blank",rel:"noopener noreferrer"},Hn=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install animate.css --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>main.js(全局引入，也可局部页面引入)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import animate from &quot;animate.css&quot;;

Vue.use(animate)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在需要动画的页面加入相关类名</p><p>class里面要加入animate__animated，否则样式可能不生效，样式效果参考官网</p><p>animate__animated 中间有两条下划线（注意）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;div  class=&quot;animate__animated animate__bounce &quot;&gt;  bounce 动画&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="vue通过事件修改dom的样式" tabindex="-1"><a class="header-anchor" href="#vue通过事件修改dom的样式" aria-hidden="true">#</a> Vue通过事件修改dom的样式</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;div ref=&quot;animate&quot; &gt;  123456 &lt;/div&gt;
&lt;div @click=&quot;changeColor&quot;&gt;改变颜色&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>changeColor(){
  this.$refs.animate.style.color=&quot;red&quot;   //  修改style样式
  this.$refs.animate.className=&quot;reds&quot;    //  修改类名
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;style&gt;
.reds{
  color:red
}
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css-字体" tabindex="-1"><a class="header-anchor" href="#css-字体" aria-hidden="true">#</a> css 字体</h2><p>下载字体文件如： --.ttf , --.otf ， 优设标题黑.ttf</p><p>@font-face 设置字体名，引入字体文件， 类名引用font-family</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>

  <span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">&quot;YouSheBiaoTiHei&quot;</span><span class="token punctuation">;</span>

  <span class="token property">src</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;../font/优设标题黑.ttf&quot;</span><span class="token punctuation">)</span></span>

<span class="token punctuation">}</span>

<span class="token selector">.font</span><span class="token punctuation">{</span>
	<span class="token property">font-family</span><span class="token punctuation">:</span> YouSheBiaoTiHei<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="阿里巴巴图标库" tabindex="-1"><a class="header-anchor" href="#阿里巴巴图标库" aria-hidden="true">#</a> 阿里巴巴图标库</h2>`,16),In={href:"https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a",target:"_blank",rel:"noopener noreferrer"},$n=e(`<p>**推荐使用svg引入，能够保全图标的颜色，但svg兼容性不如另外的引入方式。**使用另两种可能图标颜色失效。（Unicode 引用和font class 引入的 iconfont 基础样式一定要有，否则不生效）每次增加或删除图标时，记得及时更新css代码</p><h3 id="unicode-引用" tabindex="-1"><a class="header-anchor" href="#unicode-引用" aria-hidden="true">#</a> Unicode 引用</h3><p>复制代码到 iconfont.css 文件，加入icontfont 类样式，否则图标显示不出来 index页面引入</p><p>css代码内要补齐路径的协议名，否则可能不生效，类似</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;iconfont&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* Project id 3282941 */</span>
  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;//at.alicdn.com/t/c/font_3282941_jbr83zz08v.woff2?t=1673325748491&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;//at.alicdn.com/t/c/font_3282941_jbr83zz08v.woff?t=1673325748491&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;//at.alicdn.com/t/c/font_3282941_jbr83zz08v.ttf?t=1673325748491&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;truetype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.iconfont</span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;iconfont&quot;</span> <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>
  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>的要补齐url路径，如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;iconfont&#39;</span><span class="token punctuation">;</span>
    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;https://at.alicdn.com/t/c/font_3282941_jbr83zz08v.woff2?t=1673325748491&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;https://at.alicdn.com/t/c/font_3282941_jbr83zz08v.woff?t=1673325748491&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;https://at.alicdn.com/t/c/font_3282941_jbr83zz08v.ttf?t=1673325748491&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;truetype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.iconfont</span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;iconfont&quot;</span> <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>
  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;./iconfont.css&quot;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>span标签内容从网页中图标处复制</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;span class=&quot;iconfont&quot;&gt;&amp;#xe66c;&lt;/span&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="font-class-引入" tabindex="-1"><a class="header-anchor" href="#font-class-引入" aria-hidden="true">#</a> font class 引入</h3><p>打开font class页面，复制代码到 iconfont.css 文件，index页面引入</p><p>注意复制的css代码补如上 Unicode 引用 要补齐协议名，否则可能不生效</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./iconfont.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如下使用图标：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconfont icon-xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="svg引入" tabindex="-1"><a class="header-anchor" href="#svg引入" aria-hidden="true">#</a> svg引入</h3><p>打开代码页，复制代码到 svg.js 文件，index页面引入js文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;script src=&quot;./svg.js&quot;&gt;&lt;/script&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>加入通用 CSS 的icon样式代码（引入一次就行）：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.icon</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> -0.15em<span class="token punctuation">;</span>
  <span class="token property">fill</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>svg标签使用</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#icon-xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="单个图标引入-svg" tabindex="-1"><a class="header-anchor" href="#单个图标引入-svg" aria-hidden="true">#</a> 单个图标引入（svg）</h3><p>点击图标下载按钮，复制svg代码，新建 icon.svg 文件，粘贴代码</p><p>index页面，使用 img 标签引入svg文件即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;img src=&quot;./gpu.svg&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="下载后引入" tabindex="-1"><a class="header-anchor" href="#下载后引入" aria-hidden="true">#</a> 下载后引入</h3><p>下载时，点项目设置，字体格式要勾选 base64，</p><p>将下载后的css文件引入到要用的页面里，如上设置图标即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;span class=&quot;iconfont icon-***&quot;&gt;&lt;/span&gt; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="修改滚动条样式" tabindex="-1"><a class="header-anchor" href="#修改滚动条样式" aria-hidden="true">#</a> 修改滚动条样式</h2><p>以下是在网上搜到的，根据注释改变想要的滚动条样式即可。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/</span>
<span class="token selector">::-webkit-scrollbar</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*定义滚动条轨道 内阴影+圆角*/</span>
<span class="token selector">::-webkit-scrollbar-track</span> <span class="token punctuation">{</span>
  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> inset 0 0 6px 6px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*定义滑块 内阴影+圆角*/</span>
<span class="token selector">::-webkit-scrollbar-thumb</span> <span class="token punctuation">{</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> inset 0 0 6px 6px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34);function Pn(Rn,Jn){const a=c("ExternalLinkIcon");return l(),o("div",null,[d,n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",p,[s("transition"),t(a)])]),u,v])]),n("tbody",null,[n("tr",null,[n("td",null,[n("a",m,[s("transition-property"),t(a)])]),h,g]),n("tr",null,[n("td",null,[n("a",b,[s("transition-duration"),t(a)])]),k,f]),n("tr",null,[n("td",null,[n("a",x,[s("transition-timing-function"),t(a)])]),_,y]),n("tr",null,[n("td",null,[n("a",w,[s("transition-delay"),t(a)])]),q,z])])]),S,n("table",null,[j,n("tbody",null,[n("tr",null,[n("td",C,[n("a",Y,[s("@keyframes"),t(a)])]),X,B]),n("tr",null,[n("td",N,[n("a",V,[s("animation"),t(a)])]),D,F]),n("tr",null,[n("td",E,[n("a",L,[s("animation-name"),t(a)])]),T,U]),n("tr",null,[n("td",A,[n("a",G,[s("animation-duration"),t(a)])]),H,I]),n("tr",null,[n("td",$,[n("a",P,[s("animation-timing-function"),t(a)])]),R,J]),n("tr",null,[n("td",K,[n("a",M,[s("animation-fill-mode"),t(a)])]),O,Q]),n("tr",null,[n("td",W,[n("a",Z,[s("animation-delay"),t(a)])]),nn,sn]),n("tr",null,[n("td",an,[n("a",tn,[s("animation-iteration-count"),t(a)])]),en,ln]),n("tr",null,[n("td",on,[n("a",cn,[s("animation-direction"),t(a)])]),rn,dn]),n("tr",null,[n("td",pn,[n("a",un,[s("animation-play-state"),t(a)])]),vn,mn])])]),hn,n("table",null,[gn,n("tbody",null,[bn,n("tr",null,[kn,fn,n("td",xn,[n("a",_n,[s("测试"),t(a)])])]),n("tr",null,[yn,wn,n("td",qn,[n("a",zn,[s("测试"),t(a)])])]),n("tr",null,[Sn,jn,n("td",Cn,[n("a",Yn,[s("测试"),t(a)])])]),n("tr",null,[Xn,Bn,n("td",Nn,[n("a",Vn,[s("测试"),t(a)])])]),n("tr",null,[Dn,Fn,n("td",En,[n("a",Ln,[s("测试"),t(a)])])]),Tn,Un])]),An,n("p",null,[n("a",Gn,[s("Animate.css | A cross-browser library of CSS animations."),t(a)])]),Hn,n("p",null,[n("a",In,[s("iconfont-阿里巴巴矢量图标库"),t(a)])]),$n])}const On=i(r,[["render",Pn],["__file","2.html.vue"]]);export{On as default};
