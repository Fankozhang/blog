import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as o,a as n,b as s,e as t,f as c,r as l}from"./app.384afca4.js";const i={},r=n("h1",{id:"javascript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript","aria-hidden":"true"},"#"),s(" javaScript")],-1),u=n("h2",{id:"打开url",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#打开url","aria-hidden":"true"},"#"),s(" 打开url")],-1),d=n("p",null,"可以使用a链接 location.href=url 或者 window.open(url)",-1),k=n("p",null,"当在新页面中打开时，可以使用 window.open(url，”_blank“)",-1),h={href:"http://www.aaaaa.com",target:"_blank",rel:"noopener noreferrer"},v={href:"http://localhost:8080/abc/www.aaaaa.com",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[s('（解决方法）window.open("http://" + url, "_blank") 将'),n("strong",null,"协议名"),s("作为字符串和url进行拼接，或者让后端将网址的协议名都加上，此时就能跳转正常了。")],-1),b=n("h2",{id:"js中日期格式化常用方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#js中日期格式化常用方法","aria-hidden":"true"},"#"),s(" js中日期格式化常用方法")],-1),_={href:"https://juejin.cn/post/6999283812958109709",target:"_blank",rel:"noopener noreferrer"},g={href:"https://blog.csdn.net/weixin_44136505/article/details/120549478",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,"moment.js 与 day.js 日期库（推荐使用day.js）",-1),f=n("h2",{id:"js代码技巧",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#js代码技巧","aria-hidden":"true"},"#"),s(" js代码技巧")],-1),j={href:"https://mp.weixin.qq.com/s/Ubk7qcbN5VS52Mtb2yeYpg",target:"_blank",rel:"noopener noreferrer"},S=n("h2",{id:"js在web页面中调起本地应用程序",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#js在web页面中调起本地应用程序","aria-hidden":"true"},"#"),s(" JS在web页面中调起本地应用程序")],-1),q={href:"https://blog.csdn.net/nine_three_/article/details/121146847",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"（注意：调用微信时，文件导出的文件名 weixin ）",-1),x=n("h2",{id:"脚手架教程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#脚手架教程","aria-hidden":"true"},"#"),s(" 脚手架教程")],-1),N={href:"https://juejin.cn/post/7260144602471776311#heading-26",target:"_blank",rel:"noopener noreferrer"},C=n("h2",{id:"js判断url是否是合法http-https",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#js判断url是否是合法http-https","aria-hidden":"true"},"#"),s(" js判断url是否是合法http/https")],-1),D={href:"https://blog.csdn.net/qq_44275213/article/details/110527407",target:"_blank",rel:"noopener noreferrer"},E=n("h2",{id:"websocket",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#websocket","aria-hidden":"true"},"#"),s(" websocket")],-1),W={href:"https://blog.csdn.net/hwh295/article/details/123554646",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.bilibili.com/video/BV1HX4y1L7GK/?p=2&spm_id_from=pageDriver&vd_source=f25f5a8d75a3a60d5a288f726803ec11",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.runoob.com/html/html5-websocket.html",target:"_blank",rel:"noopener noreferrer"},O=c(`<p>1.新建 WebSocket 实例</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">&#39;ws://localhost:3000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.webSocket.readyState</p><p><code>readyState</code>属性返回实例对象的当前状态，共有四种。</p><ul><li>CONNECTING：值为0，表示正在连接。</li><li>OPEN：值为1，表示连接成功，可以通信了。</li><li>CLOSING：值为2，表示连接正在关闭。</li><li>CLOSED：值为3，表示连接已经关闭，或者打开连接失败。</li></ul><p>3.webSocket.onopen</p><p><code>onopen</code>属性，用于指定连接成功后的回调函数。</p><p>4.webSocket.onclose</p><p><code>onclose</code>属性，用于指定连接关闭后的回调函数。</p><p>5.webSocket.onmessage</p><p><code>onmessage</code>属性，用于指定收到服务器数据后的回调函数。</p><p>6.webSocket.send()</p><p><code>send()</code>方法用于向服务器发送数据。</p><p>7.webSocket.bufferedAmount</p><p><code>bufferedAmount</code>属性，表示还有多少字节的二进制数据没有发送出去。它可以用来判断发送是否结束。</p><p>8.webSocket.onerror</p><p><code>onerror</code>属性，用于指定报错时的回调函数。</p><h3 id="实践" tabindex="-1"><a class="header-anchor" href="#实践" aria-hidden="true">#</a> 实践</h3><p>websocket.js （npm i express npm install ws） npm i cors -S (解决跨域)</p><p>node在package.json添加 &quot;type&quot;: &quot;module&quot; 可以使用 import 语法，否则报错</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>
<span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">&#39;http&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>WebSocketServer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ws&#39;</span>


<span class="token keyword">const</span> app<span class="token operator">=</span><span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token comment">//创建一个http服务</span>

<span class="token keyword">const</span> wss<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocketServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>server<span class="token punctuation">}</span><span class="token punctuation">)</span>
wss<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connection&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;connection open&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// 给客户端发消息</span>
    ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;hell0 client&#39;</span><span class="token punctuation">)</span>

    ws<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;客户端发送的数据&#39;</span><span class="token operator">+</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>socket.html</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">&#39;ws://localhost:3000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ws<span class="token punctuation">.</span><span class="token function-variable function">onopen</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span>
            ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;server open&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//给服务端发送消息</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 监控服务端数据</span>
        ws<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;服务端响应的数据&#39;</span><span class="token operator">+</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function T(B,I){const a=l("ExternalLinkIcon");return p(),o("div",null,[r,u,d,k,n("p",null,[s("（遇到过问题）在vue项目中，后台返回一个类如 ”"),n("a",h,[s("www.aaaaa.com"),t(a)]),s("“ 的 url 时，此时使用 window.open(url，”_blank“) ,发现网页跳转到 "),n("a",v,[s("http://localhost:8080/abc/www.aaaaa.com"),t(a)]),s(" 这样的地址，url作为路径加在了网址后面，明显有错，路径不正常。")]),m,b,n("p",null,[n("a",_,[s("js中日期格式化常用方法 - 掘金 (juejin.cn)"),t(a)])]),n("p",null,[n("a",g,[s("(207条消息) JS：格式化时间的方法，及获取指定格式的方法_js获取固定格式_前端-如此如此。的博客-CSDN博客"),t(a)])]),w,f,n("p",null,[n("a",j,[s("21 个简单实用的 JavaScript 代码技巧 (qq.com)"),t(a)])]),S,n("p",null,[n("a",q,[s("(210条消息) JS在web页面中调起本地应用程序_js启动本地程序_nine_three_的博客-CSDN博客"),t(a)])]),y,x,n("p",null,[n("a",N,[s("写给5年前端妹子的三万字脚手架教程 - 掘金 (juejin.cn)"),t(a)])]),C,n("p",null,[n("a",D,[s("https://blog.csdn.net/qq_44275213/article/details/110527407"),t(a)])]),E,n("p",null,[s("参考文章： "),n("a",W,[s("认识WebSocket并搭建服务端_websocket服务器端搭建_Hacah的博客-CSDN博客"),t(a)])]),n("p",null,[s("参考视频： "),n("a",L,[s("【知识点】websocket2_哔哩哔哩_bilibili"),t(a)])]),n("p",null,[s("请求的network详情参考： "),n("a",V,[s("HTML5 WebSocket | 菜鸟教程 (runoob.com)"),t(a)])]),O])}const H=e(i,[["render",T],["__file","3.html.vue"]]);export{H as default};
